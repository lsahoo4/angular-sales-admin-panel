{
    "sourceFile": "src/app/navbar/navbar.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1703576827267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1703664905006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,10 @@\n   ]\n })\n export class NavbarComponent {\n   private breakpointObserver = inject(BreakpointObserver);\n-  menuItems = ['dashboard', 'sales', 'orders', 'customers', 'products'];\n+  // menuItems = ['dashboard', 'sales', 'orders', 'customers', 'products'];\n+  menuItems = ['dashboard', 'orders', 'customers', 'products'];\n   isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n     .pipe(\n       map(result => result.matches),\n       shareReplay()\n"
                },
                {
                    "date": 1703664928677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n })\n export class NavbarComponent {\n   private breakpointObserver = inject(BreakpointObserver);\n   // menuItems = ['dashboard', 'sales', 'orders', 'customers', 'products'];\n-  menuItems = ['dashboard', 'orders', 'customers', 'products'];\n+  menuItems = ['dashboard', 'products','orders', 'customers'];\n   isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n     .pipe(\n       map(result => result.matches),\n       shareReplay()\n"
                },
                {
                    "date": 1704182216472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n })\n export class NavbarComponent {\n   private breakpointObserver = inject(BreakpointObserver);\n   // menuItems = ['dashboard', 'sales', 'orders', 'customers', 'products'];\n-  menuItems = ['dashboard', 'products','orders', 'customers'];\n+  menuItems = ['dashboard','orders'];\n   isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n     .pipe(\n       map(result => result.matches),\n       shareReplay()\n"
                },
                {
                    "date": 1704182384645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n })\n export class NavbarComponent {\n   private breakpointObserver = inject(BreakpointObserver);\n   // menuItems = ['dashboard', 'sales', 'orders', 'customers', 'products'];\n-  menuItems = ['dashboard','orders'];\n+  menuItems = ['orders'];\n   isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n     .pipe(\n       map(result => result.matches),\n       shareReplay()\n"
                },
                {
                    "date": 1704183586571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,38 @@\n+import { Component, inject } from '@angular/core';\n+import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n+import { AsyncPipe, CommonModule } from '@angular/common';\n+import { MatToolbarModule } from '@angular/material/toolbar';\n+import { MatButtonModule } from '@angular/material/button';\n+import { MatSidenavModule } from '@angular/material/sidenav';\n+import { MatListModule } from '@angular/material/list';\n+import { MatIconModule } from '@angular/material/icon';\n+import { Observable } from 'rxjs';\n+import { map, shareReplay } from 'rxjs/operators';\n+import { RouterModule } from '@angular/router';\n+\n+@Component({\n+  selector: 'app-navbar',\n+  templateUrl: './navbar.component.html',\n+  styleUrls: ['./navbar.component.css'],\n+  standalone: true,\n+  imports: [\n+    MatToolbarModule,\n+    MatButtonModule,\n+    MatSidenavModule,\n+    MatListModule,\n+    MatIconModule,\n+    AsyncPipe,\n+    RouterModule,\n+    CommonModule\n+  ]\n+})\n+export class NavbarComponent {\n+  private breakpointObserver = inject(BreakpointObserver);\n+  // menuItems = ['dashboard', 'sales', 'orders', 'customers', 'products'];\n+  menuItems = ['dashboard','orders'];\n+  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n+    .pipe(\n+      map(result => result.matches),\n+      shareReplay()\n+    );\n+}\n"
                },
                {
                    "date": 1704183649252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,38 @@\n+import { Component, inject } from '@angular/core';\n+import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n+import { AsyncPipe, CommonModule } from '@angular/common';\n+import { MatToolbarModule } from '@angular/material/toolbar';\n+import { MatButtonModule } from '@angular/material/button';\n+import { MatSidenavModule } from '@angular/material/sidenav';\n+import { MatListModule } from '@angular/material/list';\n+import { MatIconModule } from '@angular/material/icon';\n+import { Observable } from 'rxjs';\n+import { map, shareReplay } from 'rxjs/operators';\n+import { RouterModule } from '@angular/router';\n+\n+@Component({\n+  selector: 'app-navbar',\n+  templateUrl: './navbar.component.html',\n+  styleUrls: ['./navbar.component.css'],\n+  standalone: true,\n+  imports: [\n+    MatToolbarModule,\n+    MatButtonModule,\n+    MatSidenavModule,\n+    MatListModule,\n+    MatIconModule,\n+    AsyncPipe,\n+    RouterModule,\n+    CommonModule\n+  ]\n+})\n+export class NavbarComponent {\n+  private breakpointObserver = inject(BreakpointObserver);\n+  // menuItems = ['dashboard', 'sales', 'orders', 'customers', 'products'];\n+  menuItems = ['dashboard', 'products','orders', 'customers'];\n+  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n+    .pipe(\n+      map(result => result.matches),\n+      shareReplay()\n+    );\n+}\n"
                },
                {
                    "date": 1704186594723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,87 +28,11 @@\n })\n export class NavbarComponent {\n   private breakpointObserver = inject(BreakpointObserver);\n   // menuItems = ['dashboard', 'sales', 'orders', 'customers', 'products'];\n-  menuItems = ['dashboard', 'products','orders', 'customers'];\n-  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n-    .pipe(\n-      map(result => result.matches),\n-      shareReplay()\n-    );\n-}\n-import { Component, inject } from '@angular/core';\n-import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n-import { AsyncPipe, CommonModule } from '@angular/common';\n-import { MatToolbarModule } from '@angular/material/toolbar';\n-import { MatButtonModule } from '@angular/material/button';\n-import { MatSidenavModule } from '@angular/material/sidenav';\n-import { MatListModule } from '@angular/material/list';\n-import { MatIconModule } from '@angular/material/icon';\n-import { Observable } from 'rxjs';\n-import { map, shareReplay } from 'rxjs/operators';\n-import { RouterModule } from '@angular/router';\n-\n-@Component({\n-  selector: 'app-navbar',\n-  templateUrl: './navbar.component.html',\n-  styleUrls: ['./navbar.component.css'],\n-  standalone: true,\n-  imports: [\n-    MatToolbarModule,\n-    MatButtonModule,\n-    MatSidenavModule,\n-    MatListModule,\n-    MatIconModule,\n-    AsyncPipe,\n-    RouterModule,\n-    CommonModule\n-  ]\n-})\n-export class NavbarComponent {\n-  private breakpointObserver = inject(BreakpointObserver);\n-  // menuItems = ['dashboard', 'sales', 'orders', 'customers', 'products'];\n   menuItems = ['dashboard','orders'];\n   isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n     .pipe(\n       map(result => result.matches),\n       shareReplay()\n     );\n }\n-import { Component, inject } from '@angular/core';\n-import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n-import { AsyncPipe, CommonModule } from '@angular/common';\n-import { MatToolbarModule } from '@angular/material/toolbar';\n-import { MatButtonModule } from '@angular/material/button';\n-import { MatSidenavModule } from '@angular/material/sidenav';\n-import { MatListModule } from '@angular/material/list';\n-import { MatIconModule } from '@angular/material/icon';\n-import { Observable } from 'rxjs';\n-import { map, shareReplay } from 'rxjs/operators';\n-import { RouterModule } from '@angular/router';\n-\n-@Component({\n-  selector: 'app-navbar',\n-  templateUrl: './navbar.component.html',\n-  styleUrls: ['./navbar.component.css'],\n-  standalone: true,\n-  imports: [\n-    MatToolbarModule,\n-    MatButtonModule,\n-    MatSidenavModule,\n-    MatListModule,\n-    MatIconModule,\n-    AsyncPipe,\n-    RouterModule,\n-    CommonModule\n-  ]\n-})\n-export class NavbarComponent {\n-  private breakpointObserver = inject(BreakpointObserver);\n-  // menuItems = ['dashboard', 'sales', 'orders', 'customers', 'products'];\n-  menuItems = ['orders'];\n-  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n-    .pipe(\n-      map(result => result.matches),\n-      shareReplay()\n-    );\n-}\n"
                },
                {
                    "date": 1704190296571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,38 @@\n+import { Component, inject } from '@angular/core';\n+import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n+import { AsyncPipe, CommonModule } from '@angular/common';\n+import { MatToolbarModule } from '@angular/material/toolbar';\n+import { MatButtonModule } from '@angular/material/button';\n+import { MatSidenavModule } from '@angular/material/sidenav';\n+import { MatListModule } from '@angular/material/list';\n+import { MatIconModule } from '@angular/material/icon';\n+import { Observable } from 'rxjs';\n+import { map, shareReplay } from 'rxjs/operators';\n+import { RouterModule } from '@angular/router';\n+\n+@Component({\n+  selector: 'app-navbar',\n+  templateUrl: './navbar.component.html',\n+  styleUrls: ['./navbar.component.css'],\n+  standalone: true,\n+  imports: [\n+    MatToolbarModule,\n+    MatButtonModule,\n+    MatSidenavModule,\n+    MatListModule,\n+    MatIconModule,\n+    AsyncPipe,\n+    RouterModule,\n+    CommonModule\n+  ]\n+})\n+export class NavbarComponent {\n+  private breakpointObserver = inject(BreakpointObserver);\n+  // menuItems = ['dashboard', 'sales', 'orders', 'customers', 'products'];\n+  menuItems = ['dashboard', 'products','orders', 'customers'];\n+  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n+    .pipe(\n+      map(result => result.matches),\n+      shareReplay()\n+    );\n+}\n"
                }
            ],
            "date": 1703576827267,
            "name": "Commit-0",
            "content": "import { Component, inject } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { AsyncPipe, CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n  standalone: true,\n  imports: [\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatListModule,\n    MatIconModule,\n    AsyncPipe,\n    RouterModule,\n    CommonModule\n  ]\n})\nexport class NavbarComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n  menuItems = ['dashboard', 'sales', 'orders', 'customers', 'products'];\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n}\n"
        }
    ]
}