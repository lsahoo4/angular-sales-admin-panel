{
    "sourceFile": "src/app/product/product-table/product-table.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1703746914829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1703753067801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,15 +3,23 @@\n import { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\n import { MatSortModule, MatSort } from '@angular/material/sort';\n import { ProductTableDataSource, ProductTableItem } from './product-table-datasource';\n import { MatCardModule } from '@angular/material/card';\n+import { MatButtonModule } from '@angular/material/button';\n+import { FlexLayoutModule } from '@angular/flex-layout';\n+import { Router, RouterModule } from '@angular/router';\n+import { MatIconModule } from '@angular/material/icon';\n \n @Component({\n   selector: 'app-product-table',\n   templateUrl: './product-table.component.html',\n   styleUrls: ['./product-table.component.css'],\n   standalone: true,\n-  imports: [MatTableModule, MatPaginatorModule, MatSortModule, MatCardModule]\n+  imports: [MatTableModule, MatPaginatorModule, MatSortModule, MatCardModule,\n+    MatIconModule, \n+    MatButtonModule,\n+    FlexLayoutModule,\n+    RouterModule]\n })\n export class ProductTableComponent implements AfterViewInit {\n   @ViewChild(MatPaginator) paginator!: MatPaginator;\n   @ViewChild(MatSort) sort!: MatSort;\n@@ -25,5 +33,11 @@\n     this.dataSource.sort = this.sort;\n     this.dataSource.paginator = this.paginator;\n     this.table.dataSource = this.dataSource;\n   }\n+\n+  constructor(private router: Router) {}\n+\n+  addNew() {\n+    this.router.navigateByUrl('/products/new');\n+  }\n }\n"
                },
                {
                    "date": 1704253731351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n   @ViewChild(MatTable) table!: MatTable<ProductTableItem>;\n   dataSource = new ProductTableDataSource();\n \n   /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n-  displayedColumns = ['id', 'name'];\n+  displayedColumns = ['id', 'name', 'price','description'];\n \n   ngAfterViewInit(): void {\n     this.dataSource.sort = this.sort;\n     this.dataSource.paginator = this.paginator;\n"
                },
                {
                    "date": 1704254469633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n import { MatButtonModule } from '@angular/material/button';\n import { FlexLayoutModule } from '@angular/flex-layout';\n import { Router, RouterModule } from '@angular/router';\n import { MatIconModule } from '@angular/material/icon';\n+import { MatInputModule } from '@angular/material/input';\n \n @Component({\n   selector: 'app-product-table',\n   templateUrl: './product-table.component.html',\n@@ -17,16 +18,18 @@\n   imports: [MatTableModule, MatPaginatorModule, MatSortModule, MatCardModule,\n     MatIconModule, \n     MatButtonModule,\n     FlexLayoutModule,\n-    RouterModule]\n+    RouterModule,\n+    MatInputModule\n+  ]\n })\n export class ProductTableComponent implements AfterViewInit {\n   @ViewChild(MatPaginator) paginator!: MatPaginator;\n   @ViewChild(MatSort) sort!: MatSort;\n   @ViewChild(MatTable) table!: MatTable<ProductTableItem>;\n   dataSource = new ProductTableDataSource();\n-\n+  isTableHasData: boolean = false;\n   /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n   displayedColumns = ['id', 'name', 'price','description'];\n \n   ngAfterViewInit(): void {\n@@ -39,5 +42,14 @@\n \n   addNew() {\n     this.router.navigateByUrl('/products/new');\n   }\n+\n+  applyFilter(filterValue: any) {\n+    this.dataSource.filter = filterValue.trim().toLowerCase();\n+    if(this.dataSource.data.length > 0){\n+      this.isTableHasData = true;\n+    } else {\n+      this.isTableHasData = false;\n+    }\n+  }\n }\n"
                },
                {
                    "date": 1704256288508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,12 @@\n     this.dataSource.paginator = this.paginator;\n     this.table.dataSource = this.dataSource;\n   }\n \n-  constructor(private router: Router) {}\n+  constructor(private router: Router) {\n+    if(this.dataSource.data.length > 0)\n+      this.isTableHasData = true;\n+  }\n \n   addNew() {\n     this.router.navigateByUrl('/products/new');\n   }\n"
                },
                {
                    "date": 1704259243568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { AfterViewInit, Component, ViewChild } from '@angular/core';\n+import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\n import { MatTableModule, MatTable } from '@angular/material/table';\n import { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\n import { MatSortModule, MatSort } from '@angular/material/sort';\n import { ProductTableDataSource, ProductTableItem } from './product-table-datasource';\n@@ -8,8 +8,9 @@\n import { FlexLayoutModule } from '@angular/flex-layout';\n import { Router, RouterModule } from '@angular/router';\n import { MatIconModule } from '@angular/material/icon';\n import { MatInputModule } from '@angular/material/input';\n+import { SortService } from '../../sort.service';\n \n @Component({\n   selector: 'app-product-table',\n   templateUrl: './product-table.component.html',\n@@ -22,9 +23,9 @@\n     RouterModule,\n     MatInputModule\n   ]\n })\n-export class ProductTableComponent implements AfterViewInit {\n+export class ProductTableComponent implements AfterViewInit, OnInit {\n   @ViewChild(MatPaginator) paginator!: MatPaginator;\n   @ViewChild(MatSort) sort!: MatSort;\n   @ViewChild(MatTable) table!: MatTable<ProductTableItem>;\n   dataSource = new ProductTableDataSource();\n@@ -37,13 +38,20 @@\n     this.dataSource.paginator = this.paginator;\n     this.table.dataSource = this.dataSource;\n   }\n \n-  constructor(private router: Router) {\n+  constructor(\n+    private router: Router,\n+    private sortService: SortService\n+    ) {\n     if(this.dataSource.data.length > 0)\n       this.isTableHasData = true;\n   }\n \n+  ngOnInit(): void {\n+    this.dataSource.data = this.sortService.sortData(this.dataSource.data);\n+  }\n+\n   addNew() {\n     this.router.navigateByUrl('/products/new');\n   }\n \n"
                },
                {
                    "date": 1704259643815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\n import { MatTableModule, MatTable } from '@angular/material/table';\n import { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\n-import { MatSortModule, MatSort } from '@angular/material/sort';\n+import { MatSortModule, MatSort, Sort } from '@angular/material/sort';\n import { ProductTableDataSource, ProductTableItem } from './product-table-datasource';\n import { MatCardModule } from '@angular/material/card';\n import { MatButtonModule } from '@angular/material/button';\n import { FlexLayoutModule } from '@angular/flex-layout';\n@@ -48,14 +48,23 @@\n   }\n \n   ngOnInit(): void {\n     this.dataSource.data = this.sortService.sortData(this.dataSource.data);\n+    this.sort.sortChange.subscribe((sort: Sort) => {\n+      // Handle the sorting change here\n+      console.log('Sort changed:', sort);\n+      // Implement your custom sorting logic\n+    });\n   }\n \n   addNew() {\n     this.router.navigateByUrl('/products/new');\n   }\n \n+  updateSort(column: string): void {\n+    this.sortService.setSort(column);\n+  }\n+\n   applyFilter(filterValue: any) {\n     this.dataSource.filter = filterValue.trim().toLowerCase();\n     if(this.dataSource.data.length > 0){\n       this.isTableHasData = true;\n"
                },
                {
                    "date": 1704259764423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n   ]\n })\n export class ProductTableComponent implements AfterViewInit, OnInit {\n   @ViewChild(MatPaginator) paginator!: MatPaginator;\n-  @ViewChild(MatSort) sort!: MatSort;\n+  @ViewChild(MatSort, { static: true }) sort!: MatSort;\n   @ViewChild(MatTable) table!: MatTable<ProductTableItem>;\n   dataSource = new ProductTableDataSource();\n   isTableHasData: boolean = false;\n   /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n"
                },
                {
                    "date": 1704260306371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n     this.dataSource.data = this.sortService.sortData(this.dataSource.data);\n     this.sort.sortChange.subscribe((sort: Sort) => {\n       // Handle the sorting change here\n       console.log('Sort changed:', sort);\n-      // Implement your custom sorting logic\n+      this.sortService.currentSort = { column: sort.active, direction: sort.direction };\n     });\n   }\n \n   addNew() {\n"
                },
                {
                    "date": 1704265029099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\n-import { MatTableModule, MatTable } from '@angular/material/table';\n+import { MatTableModule, MatTable, MatTableDataSource } from '@angular/material/table';\n import { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\n import { MatSortModule, MatSort, Sort } from '@angular/material/sort';\n-import { ProductTableDataSource, ProductTableItem } from './product-table-datasource';\n+import { EXAMPLE_PRODUCT_DATA, ProductTableDataSource, ProductTableItem } from './product-table-datasource';\n import { MatCardModule } from '@angular/material/card';\n import { MatButtonModule } from '@angular/material/button';\n import { FlexLayoutModule } from '@angular/flex-layout';\n import { Router, RouterModule } from '@angular/router';\n@@ -27,9 +27,9 @@\n export class ProductTableComponent implements AfterViewInit, OnInit {\n   @ViewChild(MatPaginator) paginator!: MatPaginator;\n   @ViewChild(MatSort, { static: true }) sort!: MatSort;\n   @ViewChild(MatTable) table!: MatTable<ProductTableItem>;\n-  dataSource = new ProductTableDataSource();\n+  dataSource = new MatTableDataSource<ProductTableItem>(EXAMPLE_PRODUCT_DATA);\n   isTableHasData: boolean = false;\n   /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n   displayedColumns = ['id', 'name', 'price','description'];\n \n"
                },
                {
                    "date": 1704265063967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n     this.sortService.setSort(column);\n   }\n \n   applyFilter(filterValue: any) {\n-    this.dataSource.filter = filterValue.trim().toLowerCase();\n+    this.dataSource.filter = filterValue.target.value.trim().toLowerCase();\n     if(this.dataSource.data.length > 0){\n       this.isTableHasData = true;\n     } else {\n       this.isTableHasData = false;\n"
                }
            ],
            "date": 1703746914829,
            "name": "Commit-0",
            "content": "import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { MatTableModule, MatTable } from '@angular/material/table';\nimport { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\nimport { MatSortModule, MatSort } from '@angular/material/sort';\nimport { ProductTableDataSource, ProductTableItem } from './product-table-datasource';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'app-product-table',\n  templateUrl: './product-table.component.html',\n  styleUrls: ['./product-table.component.css'],\n  standalone: true,\n  imports: [MatTableModule, MatPaginatorModule, MatSortModule, MatCardModule]\n})\nexport class ProductTableComponent implements AfterViewInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatTable) table!: MatTable<ProductTableItem>;\n  dataSource = new ProductTableDataSource();\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n"
        }
    ]
}