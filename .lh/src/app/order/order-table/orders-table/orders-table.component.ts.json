{
    "sourceFile": "src/app/order/order-table/orders-table/orders-table.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 27,
            "patches": [
                {
                    "date": 1703746971886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1703751014481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,10 @@\n import { FormsModule } from '@angular/forms';\n import { CommonModule } from '@angular/common';\n import { MatListModule } from '@angular/material/list';\n import { MatCardModule } from '@angular/material/card';\n+import { MatIconModule } from '@angular/material/icon';\n+import { Router } from '@angular/router';\n \n @Component({\n   selector: 'app-orders-table',\n   templateUrl: './orders-table.component.html',\n@@ -21,9 +23,10 @@\n     MatChipsModule,\n     MatListModule,\n     FormsModule,\n     CommonModule,\n-    MatCardModule\n+    MatCardModule,\n+    MatIconModule\n   ]\n })\n export class OrdersTableComponent implements AfterViewInit, OnInit {\n   @ViewChild(MatPaginator) paginator!: MatPaginator;\n@@ -46,8 +49,14 @@\n     this.dataSource.paginator = this.paginator;\n     this.table.dataSource = this.dataSource;\n   }\n \n+  constructor(private router: Router ) {}\n+\n   ngOnInit(): void {\n     // throw new Error('Method not implemented.');\n   }\n+\n+  addNew() {\n+    this.router.navigateByUrl('/customers/new');\n+  }\n }\n"
                },
                {
                    "date": 1703751045770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n import { MatListModule } from '@angular/material/list';\n import { MatCardModule } from '@angular/material/card';\n import { MatIconModule } from '@angular/material/icon';\n import { Router } from '@angular/router';\n+import { MatButtonModule } from '@angular/material/button';\n \n @Component({\n   selector: 'app-orders-table',\n   templateUrl: './orders-table.component.html',\n@@ -24,9 +25,10 @@\n     MatListModule,\n     FormsModule,\n     CommonModule,\n     MatCardModule,\n-    MatIconModule\n+    MatIconModule,\n+    MatButtonModule\n   ]\n })\n export class OrdersTableComponent implements AfterViewInit, OnInit {\n   @ViewChild(MatPaginator) paginator!: MatPaginator;\n"
                },
                {
                    "date": 1703751059757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,7 +58,7 @@\n     // throw new Error('Method not implemented.');\n   }\n \n   addNew() {\n-    this.router.navigateByUrl('/customers/new');\n+    this.router.navigateByUrl('/orders/new');\n   }\n }\n"
                },
                {
                    "date": 1703828729608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\n+import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\n import { MatTableModule, MatTable } from '@angular/material/table';\n import { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\n import { MatSortModule, MatSort } from '@angular/material/sort';\n import { OrdersTableDataSource, OrdersTableItem } from './orders-table-datasource';\n@@ -35,8 +35,9 @@\n   @ViewChild(MatSort) sort!: MatSort;\n   @ViewChild(MatTable) table!: MatTable<OrdersTableItem>;\n   dataSource = new OrdersTableDataSource();\n   dataLength: number = 0;\n+  @Input() showAddButton: boolean = true;\n   /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n   displayedColumns = [\n     \"id\",\n     \"date\",\n"
                },
                {
                    "date": 1704177719793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,78 @@\n+import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\n+import { MatTableModule, MatTable } from '@angular/material/table';\n+import { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\n+import { MatSortModule, MatSort } from '@angular/material/sort';\n+import { OrdersTableDataSource, OrdersTableItem } from './orders-table-datasource';\n+import { MatChipsModule } from '@angular/material/chips';\n+import { FormsModule } from '@angular/forms';\n+import { CommonModule } from '@angular/common';\n+import { MatListModule } from '@angular/material/list';\n+import { MatCardModule } from '@angular/material/card';\n+import { MatIconModule } from '@angular/material/icon';\n+import { Router } from '@angular/router';\n+import { MatButtonModule } from '@angular/material/button';\n+import { MatInputModule } from '@angular/material/input';\n+\n+@Component({\n+  selector: 'app-orders-table',\n+  templateUrl: './orders-table.component.html',\n+  styleUrls: ['./orders-table.component.css'],\n+  standalone: true,\n+  imports: [\n+    MatTableModule,\n+    MatPaginatorModule,\n+    MatSortModule,\n+    MatChipsModule,\n+    MatListModule,\n+    FormsModule,\n+    CommonModule,\n+    MatCardModule,\n+    MatIconModule,\n+    MatButtonModule,\n+    MatInputModule\n+  ]\n+})\n+export class OrdersTableComponent implements AfterViewInit, OnInit {\n+  @ViewChild(MatPaginator) paginator!: MatPaginator;\n+  @ViewChild(MatSort) sort!: MatSort;\n+  @ViewChild(MatTable) table!: MatTable<OrdersTableItem>;\n+  dataSource = new OrdersTableDataSource();\n+  dataLength: number = 0;\n+  @Input() showAddButton: boolean = true;\n+\n+  isTableHasData: boolean = false;\n+  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n+  displayedColumns = [\n+    \"id\",\n+    \"date\",\n+    \"name\",\n+    \"status\",\n+    \"orderTotal\",\n+    \"paymentMode\",\n+  ];\n+\n+  ngAfterViewInit(): void {\n+    this.dataSource.sort = this.sort;\n+    this.dataSource.paginator = this.paginator;\n+    this.table.dataSource = this.dataSource;\n+  }\n+\n+  constructor(private router: Router ) {}\n+\n+  ngOnInit(): void {\n+    // throw new Error('Method not implemented.');\n+  }\n+\n+  addNew() {\n+    this.router.navigateByUrl('/orders/new');\n+  }\n+\n+  applyFilter(filterValue: any) {\n+    this.dataSource.filter = filterValue.trim().toLowerCase();\n+    if(this.dataSource.data.length > 0){\n+      this.isTableHasData = true;\n+    } else {\n+      this.isTableHasData = false;\n+    }\n+  }\n+}\n"
                },
                {
                    "date": 1704179362459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,11 +42,11 @@\n \n   isTableHasData: boolean = false;\n   /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n   displayedColumns = [\n-    \"id\",\n+    \"orderId\",\n     \"date\",\n-    \"name\",\n+    \"user\",\n     \"status\",\n     \"orderTotal\",\n     \"paymentMode\",\n   ];\n"
                },
                {
                    "date": 1704180043236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,9 @@\n     \"user\",\n     \"status\",\n     \"orderTotal\",\n     \"paymentMode\",\n+    \"actions\"\n   ];\n \n   ngAfterViewInit(): void {\n     this.dataSource.sort = this.sort;\n@@ -75,69 +76,4 @@\n       this.isTableHasData = false;\n     }\n   }\n }\n-import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\n-import { MatTableModule, MatTable } from '@angular/material/table';\n-import { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\n-import { MatSortModule, MatSort } from '@angular/material/sort';\n-import { OrdersTableDataSource, OrdersTableItem } from './orders-table-datasource';\n-import { MatChipsModule } from '@angular/material/chips';\n-import { FormsModule } from '@angular/forms';\n-import { CommonModule } from '@angular/common';\n-import { MatListModule } from '@angular/material/list';\n-import { MatCardModule } from '@angular/material/card';\n-import { MatIconModule } from '@angular/material/icon';\n-import { Router } from '@angular/router';\n-import { MatButtonModule } from '@angular/material/button';\n-\n-@Component({\n-  selector: 'app-orders-table',\n-  templateUrl: './orders-table.component.html',\n-  styleUrls: ['./orders-table.component.css'],\n-  standalone: true,\n-  imports: [\n-    MatTableModule,\n-    MatPaginatorModule,\n-    MatSortModule,\n-    MatChipsModule,\n-    MatListModule,\n-    FormsModule,\n-    CommonModule,\n-    MatCardModule,\n-    MatIconModule,\n-    MatButtonModule\n-  ]\n-})\n-export class OrdersTableComponent implements AfterViewInit, OnInit {\n-  @ViewChild(MatPaginator) paginator!: MatPaginator;\n-  @ViewChild(MatSort) sort!: MatSort;\n-  @ViewChild(MatTable) table!: MatTable<OrdersTableItem>;\n-  dataSource = new OrdersTableDataSource();\n-  dataLength: number = 0;\n-  @Input() showAddButton: boolean = true;\n-  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n-  displayedColumns = [\n-    \"id\",\n-    \"date\",\n-    \"name\",\n-    \"status\",\n-    \"orderTotal\",\n-    \"paymentMode\",\n-  ];\n-\n-  ngAfterViewInit(): void {\n-    this.dataSource.sort = this.sort;\n-    this.dataSource.paginator = this.paginator;\n-    this.table.dataSource = this.dataSource;\n-  }\n-\n-  constructor(private router: Router ) {}\n-\n-  ngOnInit(): void {\n-    // throw new Error('Method not implemented.');\n-  }\n-\n-  addNew() {\n-    this.router.navigateByUrl('/orders/new');\n-  }\n-}\n"
                },
                {
                    "date": 1704180554826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,10 @@\n \n   constructor(private router: Router ) {}\n \n   ngOnInit(): void {\n-    // throw new Error('Method not implemented.');\n+    if(this.dataSource.data.length > 0)\n+      this.isTableHasData = true;\n   }\n \n   addNew() {\n     this.router.navigateByUrl('/orders/new');\n"
                },
                {
                    "date": 1704190703296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,8 +38,9 @@\n   @ViewChild(MatTable) table!: MatTable<OrdersTableItem>;\n   dataSource = new OrdersTableDataSource();\n   dataLength: number = 0;\n   @Input() showAddButton: boolean = true;\n+  @Input() isAdmin: boolean = false;\n \n   isTableHasData: boolean = false;\n   /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n   displayedColumns = [\n"
                },
                {
                    "date": 1704203512896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { MatTableModule, MatTable } from '@angular/material/table';\n import { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\n import { MatSortModule, MatSort } from '@angular/material/sort';\n import { OrdersTableDataSource, OrdersTableItem } from './orders-table-datasource';\n-import { MatChipsModule } from '@angular/material/chips';\n+import { MatChipListbox, MatChipsModule } from '@angular/material/chips';\n import { FormsModule } from '@angular/forms';\n import { CommonModule } from '@angular/common';\n import { MatListModule } from '@angular/material/list';\n import { MatCardModule } from '@angular/material/card';\n@@ -28,9 +28,10 @@\n     CommonModule,\n     MatCardModule,\n     MatIconModule,\n     MatButtonModule,\n-    MatInputModule\n+    MatInputModule,\n+    MatChipsModule\n   ]\n })\n export class OrdersTableComponent implements AfterViewInit, OnInit {\n   @ViewChild(MatPaginator) paginator!: MatPaginator;\n"
                },
                {
                    "date": 1704260891371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,16 +34,16 @@\n   ]\n })\n export class OrdersTableComponent implements AfterViewInit, OnInit {\n   @ViewChild(MatPaginator) paginator!: MatPaginator;\n-  @ViewChild(MatSort) sort!: MatSort;\n+  @ViewChild(MatSort, { static: true }) sort!: MatSort;\n   @ViewChild(MatTable) table!: MatTable<OrdersTableItem>;\n   dataSource = new OrdersTableDataSource();\n-  dataLength: number = 0;\n+\n+  isTableHasData: boolean = false;\n   @Input() showAddButton: boolean = true;\n   @Input() isAdmin: boolean = false;\n-\n-  isTableHasData: boolean = false;\n+  \n   /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n   displayedColumns = [\n     \"orderId\",\n     \"date\",\n"
                },
                {
                    "date": 1704262413940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n     this.router.navigateByUrl('/orders/new');\n   }\n \n   applyFilter(filterValue: any) {\n-    this.dataSource.filter = filterValue.trim().toLowerCase();\n+    this.dataSource.filter = filterValue.target.value.trim().toLowerCase();\n     if(this.dataSource.data.length > 0){\n       this.isTableHasData = true;\n     } else {\n       this.isTableHasData = false;\n"
                },
                {
                    "date": 1704262839737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,8 +57,9 @@\n   ngAfterViewInit(): void {\n     this.dataSource.sort = this.sort;\n     this.dataSource.paginator = this.paginator;\n     this.table.dataSource = this.dataSource;\n+    this.dataSource.filter = '500';\n   }\n \n   constructor(private router: Router ) {}\n \n"
                },
                {
                    "date": 1704262918159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,8 +41,9 @@\n \n   isTableHasData: boolean = false;\n   @Input() showAddButton: boolean = true;\n   @Input() isAdmin: boolean = false;\n+  serchText: any;\n   \n   /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n   displayedColumns = [\n     \"orderId\",\n@@ -57,9 +58,9 @@\n   ngAfterViewInit(): void {\n     this.dataSource.sort = this.sort;\n     this.dataSource.paginator = this.paginator;\n     this.table.dataSource = this.dataSource;\n-    this.dataSource.filter = '500';\n+    this.dataSource.filter = this.serchText;\n   }\n \n   constructor(private router: Router ) {}\n \n@@ -72,9 +73,9 @@\n     this.router.navigateByUrl('/orders/new');\n   }\n \n   applyFilter(filterValue: any) {\n-    this.dataSource.filter = filterValue.target.value.trim().toLowerCase();\n+    this.serchText = filterValue.target.value.trim().toLowerCase();\n     if(this.dataSource.data.length > 0){\n       this.isTableHasData = true;\n     } else {\n       this.isTableHasData = false;\n"
                },
                {
                    "date": 1704263108738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\n+import { AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\n import { MatTableModule, MatTable } from '@angular/material/table';\n import { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\n import { MatSortModule, MatSort } from '@angular/material/sort';\n import { OrdersTableDataSource, OrdersTableItem } from './orders-table-datasource';\n@@ -32,9 +32,9 @@\n     MatInputModule,\n     MatChipsModule\n   ]\n })\n-export class OrdersTableComponent implements AfterViewInit, OnInit {\n+export class OrdersTableComponent implements AfterViewInit, OnInit, OnChanges {\n   @ViewChild(MatPaginator) paginator!: MatPaginator;\n   @ViewChild(MatSort, { static: true }) sort!: MatSort;\n   @ViewChild(MatTable) table!: MatTable<OrdersTableItem>;\n   dataSource = new OrdersTableDataSource();\n@@ -63,8 +63,12 @@\n   }\n \n   constructor(private router: Router ) {}\n \n+  ngOnChanges(changes: SimpleChanges): void {\n+   this.dataSource.filter = this.serchText;\n+  }\n+\n   ngOnInit(): void {\n     if(this.dataSource.data.length > 0)\n       this.isTableHasData = true;\n   }\n"
                },
                {
                    "date": 1704263203722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,89 @@\n+import { AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\n+import { MatTableModule, MatTable } from '@angular/material/table';\n+import { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\n+import { MatSortModule, MatSort } from '@angular/material/sort';\n+import { OrdersTableDataSource, OrdersTableItem } from './orders-table-datasource';\n+import { MatChipListbox, MatChipsModule } from '@angular/material/chips';\n+import { FormsModule } from '@angular/forms';\n+import { CommonModule } from '@angular/common';\n+import { MatListModule } from '@angular/material/list';\n+import { MatCardModule } from '@angular/material/card';\n+import { MatIconModule } from '@angular/material/icon';\n+import { Router } from '@angular/router';\n+import { MatButtonModule } from '@angular/material/button';\n+import { MatInputModule } from '@angular/material/input';\n+\n+@Component({\n+  selector: 'app-orders-table',\n+  templateUrl: './orders-table.component.html',\n+  styleUrls: ['./orders-table.component.css'],\n+  standalone: true,\n+  imports: [\n+    MatTableModule,\n+    MatPaginatorModule,\n+    MatSortModule,\n+    MatChipsModule,\n+    MatListModule,\n+    FormsModule,\n+    CommonModule,\n+    MatCardModule,\n+    MatIconModule,\n+    MatButtonModule,\n+    MatInputModule,\n+    MatChipsModule\n+  ]\n+})\n+export class OrdersTableComponent implements AfterViewInit, OnInit, OnChanges {\n+  @ViewChild(MatPaginator) paginator!: MatPaginator;\n+  @ViewChild(MatSort, { static: true }) sort!: MatSort;\n+  @ViewChild(MatTable) table!: MatTable<OrdersTableItem>;\n+  dataSource = new OrdersTableDataSource();\n+\n+  isTableHasData: boolean = false;\n+  @Input() showAddButton: boolean = true;\n+  @Input() isAdmin: boolean = false;\n+  serchText: any;\n+  \n+  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n+  displayedColumns = [\n+    \"orderId\",\n+    \"date\",\n+    \"user\",\n+    \"status\",\n+    \"orderTotal\",\n+    \"paymentMode\",\n+    \"actions\"\n+  ];\n+\n+  ngAfterViewInit(): void {\n+    this.dataSource.sort = this.sort;\n+    this.dataSource.paginator = this.paginator;\n+    this.table.dataSource = this.dataSource;\n+    this.dataSource.filter = this.serchText;\n+  }\n+\n+  constructor(private router: Router ) {}\n+\n+  ngOnChanges(changes: SimpleChanges): void {\n+   this.dataSource.filter = this.serchText;\n+  }\n+\n+  ngOnInit(): void {\n+    if(this.dataSource.data.length > 0)\n+      this.isTableHasData = true;\n+  }\n+\n+  addNew() {\n+    this.router.navigateByUrl('/orders/new');\n+  }\n+\n+  applyFilter(filterValue: any) {\n+    this.dataSource.filter = filterValue.target.value.trim().toLowerCase();\n+    this.dataSource.connect();\n+    if(this.dataSource.data.length > 0){\n+      this.isTableHasData = true;\n+    } else {\n+      this.isTableHasData = false;\n+    }\n+  }\n+}\n"
                },
                {
                    "date": 1704263451966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,12 +55,12 @@\n     \"actions\"\n   ];\n \n   ngAfterViewInit(): void {\n-    this.dataSource.sort = this.sort;\n-    this.dataSource.paginator = this.paginator;\n-    this.table.dataSource = this.dataSource;\n-    this.dataSource.filter = this.serchText;\n+    // this.dataSource.sort = this.sort;\n+    // this.dataSource.paginator = this.paginator;\n+    // this.table.dataSource = this.dataSource;\n+    // this.dataSource.filter = this.serchText;\n   }\n \n   constructor(private router: Router ) {}\n \n@@ -68,97 +68,11 @@\n    this.dataSource.filter = this.serchText;\n   }\n \n   ngOnInit(): void {\n-    if(this.dataSource.data.length > 0)\n-      this.isTableHasData = true;\n-  }\n-\n-  addNew() {\n-    this.router.navigateByUrl('/orders/new');\n-  }\n-\n-  applyFilter(filterValue: any) {\n-    this.dataSource.filter = filterValue.target.value.trim().toLowerCase();\n-    this.dataSource.connect();\n-    if(this.dataSource.data.length > 0){\n-      this.isTableHasData = true;\n-    } else {\n-      this.isTableHasData = false;\n-    }\n-  }\n-}\n-import { AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\n-import { MatTableModule, MatTable } from '@angular/material/table';\n-import { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\n-import { MatSortModule, MatSort } from '@angular/material/sort';\n-import { OrdersTableDataSource, OrdersTableItem } from './orders-table-datasource';\n-import { MatChipListbox, MatChipsModule } from '@angular/material/chips';\n-import { FormsModule } from '@angular/forms';\n-import { CommonModule } from '@angular/common';\n-import { MatListModule } from '@angular/material/list';\n-import { MatCardModule } from '@angular/material/card';\n-import { MatIconModule } from '@angular/material/icon';\n-import { Router } from '@angular/router';\n-import { MatButtonModule } from '@angular/material/button';\n-import { MatInputModule } from '@angular/material/input';\n-\n-@Component({\n-  selector: 'app-orders-table',\n-  templateUrl: './orders-table.component.html',\n-  styleUrls: ['./orders-table.component.css'],\n-  standalone: true,\n-  imports: [\n-    MatTableModule,\n-    MatPaginatorModule,\n-    MatSortModule,\n-    MatChipsModule,\n-    MatListModule,\n-    FormsModule,\n-    CommonModule,\n-    MatCardModule,\n-    MatIconModule,\n-    MatButtonModule,\n-    MatInputModule,\n-    MatChipsModule\n-  ]\n-})\n-export class OrdersTableComponent implements AfterViewInit, OnInit, OnChanges {\n-  @ViewChild(MatPaginator) paginator!: MatPaginator;\n-  @ViewChild(MatSort, { static: true }) sort!: MatSort;\n-  @ViewChild(MatTable) table!: MatTable<OrdersTableItem>;\n-  dataSource = new OrdersTableDataSource();\n-\n-  isTableHasData: boolean = false;\n-  @Input() showAddButton: boolean = true;\n-  @Input() isAdmin: boolean = false;\n-  serchText: any;\n-  \n-  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n-  displayedColumns = [\n-    \"orderId\",\n-    \"date\",\n-    \"user\",\n-    \"status\",\n-    \"orderTotal\",\n-    \"paymentMode\",\n-    \"actions\"\n-  ];\n-\n-  ngAfterViewInit(): void {\n     this.dataSource.sort = this.sort;\n     this.dataSource.paginator = this.paginator;\n     this.table.dataSource = this.dataSource;\n-    this.dataSource.filter = this.serchText;\n-  }\n-\n-  constructor(private router: Router ) {}\n-\n-  ngOnChanges(changes: SimpleChanges): void {\n-   this.dataSource.filter = this.serchText;\n-  }\n-\n-  ngOnInit(): void {\n     if(this.dataSource.data.length > 0)\n       this.isTableHasData = true;\n   }\n \n@@ -166,9 +80,9 @@\n     this.router.navigateByUrl('/orders/new');\n   }\n \n   applyFilter(filterValue: any) {\n-    this.serchText = filterValue.target.value.trim().toLowerCase();\n+    this.dataSource.filter = filterValue.target.value.trim().toLowerCase();\n     if(this.dataSource.data.length > 0){\n       this.isTableHasData = true;\n     } else {\n       this.isTableHasData = false;\n"
                },
                {
                    "date": 1704263471556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,12 +55,12 @@\n     \"actions\"\n   ];\n \n   ngAfterViewInit(): void {\n-    // this.dataSource.sort = this.sort;\n-    // this.dataSource.paginator = this.paginator;\n-    // this.table.dataSource = this.dataSource;\n-    // this.dataSource.filter = this.serchText;\n+    this.dataSource.sort = this.sort;\n+    this.dataSource.paginator = this.paginator;\n+    this.table.dataSource = this.dataSource;\n+    this.dataSource.filter = this.serchText;\n   }\n \n   constructor(private router: Router ) {}\n \n@@ -68,11 +68,8 @@\n    this.dataSource.filter = this.serchText;\n   }\n \n   ngOnInit(): void {\n-    this.dataSource.sort = this.sort;\n-    this.dataSource.paginator = this.paginator;\n-    this.table.dataSource = this.dataSource;\n     if(this.dataSource.data.length > 0)\n       this.isTableHasData = true;\n   }\n \n"
                },
                {
                    "date": 1704263616113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,8 +76,12 @@\n   addNew() {\n     this.router.navigateByUrl('/orders/new');\n   }\n \n+  /**\n+   * \n+   * @param filterValue \n+   */\n   applyFilter(filterValue: any) {\n     this.dataSource.filter = filterValue.target.value.trim().toLowerCase();\n     if(this.dataSource.data.length > 0){\n       this.isTableHasData = true;\n"
                },
                {
                    "date": 1704263677205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,92 @@\n+import { AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\n+import { MatTableModule, MatTable } from '@angular/material/table';\n+import { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\n+import { MatSortModule, MatSort } from '@angular/material/sort';\n+import { OrdersTableDataSource, OrdersTableItem } from './orders-table-datasource';\n+import { MatChipListbox, MatChipsModule } from '@angular/material/chips';\n+import { FormsModule } from '@angular/forms';\n+import { CommonModule } from '@angular/common';\n+import { MatListModule } from '@angular/material/list';\n+import { MatCardModule } from '@angular/material/card';\n+import { MatIconModule } from '@angular/material/icon';\n+import { Router } from '@angular/router';\n+import { MatButtonModule } from '@angular/material/button';\n+import { MatInputModule } from '@angular/material/input';\n+\n+@Component({\n+  selector: 'app-orders-table',\n+  templateUrl: './orders-table.component.html',\n+  styleUrls: ['./orders-table.component.css'],\n+  standalone: true,\n+  imports: [\n+    MatTableModule,\n+    MatPaginatorModule,\n+    MatSortModule,\n+    MatChipsModule,\n+    MatListModule,\n+    FormsModule,\n+    CommonModule,\n+    MatCardModule,\n+    MatIconModule,\n+    MatButtonModule,\n+    MatInputModule,\n+    MatChipsModule\n+  ]\n+})\n+export class OrdersTableComponent implements AfterViewInit, OnInit, OnChanges {\n+  @ViewChild(MatPaginator) paginator!: MatPaginator;\n+  @ViewChild(MatSort, { static: true }) sort!: MatSort;\n+  @ViewChild(MatTable) table!: MatTable<OrdersTableItem>;\n+  dataSource = new OrdersTableDataSource();\n+\n+  isTableHasData: boolean = false;\n+  @Input() showAddButton: boolean = true;\n+  @Input() isAdmin: boolean = false;\n+  serchText: any;\n+  \n+  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n+  displayedColumns = [\n+    \"orderId\",\n+    \"date\",\n+    \"user\",\n+    \"status\",\n+    \"orderTotal\",\n+    \"paymentMode\",\n+    \"actions\"\n+  ];\n+\n+  ngAfterViewInit(): void {\n+    this.dataSource.sort = this.sort;\n+    this.dataSource.paginator = this.paginator;\n+    this.table.dataSource = this.dataSource;\n+    this.dataSource.filter = '5';\n+  }\n+\n+  constructor(private router: Router ) {}\n+\n+  ngOnChanges(changes: SimpleChanges): void {\n+   this.dataSource.filter = this.serchText;\n+  }\n+\n+  ngOnInit(): void {\n+    if(this.dataSource.data.length > 0)\n+      this.isTableHasData = true;\n+  }\n+\n+  addNew() {\n+    this.router.navigateByUrl('/orders/new');\n+  }\n+\n+  /**\n+   * \n+   * @param filterValue \n+   */\n+  applyFilter(filterValue: any) {\n+    this.dataSource.filter = filterValue.target.value.trim().toLowerCase();\n+    if(this.dataSource.data.length > 0){\n+      this.isTableHasData = true;\n+    } else {\n+      this.isTableHasData = false;\n+    }\n+  }\n+}\n"
                },
                {
                    "date": 1704264358434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\n-import { MatTableModule, MatTable } from '@angular/material/table';\n+import { MatTableModule, MatTable, MatTableDataSource } from '@angular/material/table';\n import { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\n import { MatSortModule, MatSort } from '@angular/material/sort';\n import { OrdersTableDataSource, OrdersTableItem } from './orders-table-datasource';\n import { MatChipListbox, MatChipsModule } from '@angular/material/chips';\n@@ -36,9 +36,9 @@\n export class OrdersTableComponent implements AfterViewInit, OnInit, OnChanges {\n   @ViewChild(MatPaginator) paginator!: MatPaginator;\n   @ViewChild(MatSort, { static: true }) sort!: MatSort;\n   @ViewChild(MatTable) table!: MatTable<OrdersTableItem>;\n-  dataSource = new OrdersTableDataSource();\n+  dataSource = new MatTableDataSource();\n \n   isTableHasData: boolean = false;\n   @Input() showAddButton: boolean = true;\n   @Input() isAdmin: boolean = false;\n@@ -57,16 +57,16 @@\n \n   ngAfterViewInit(): void {\n     this.dataSource.sort = this.sort;\n     this.dataSource.paginator = this.paginator;\n-    this.table.dataSource = this.dataSource;\n+    // this.table.dataSource = this.dataSource;\n     this.dataSource.filter = '5';\n   }\n \n   constructor(private router: Router ) {}\n \n   ngOnChanges(changes: SimpleChanges): void {\n-   this.dataSource.filter = this.serchText;\n+  //  this.dataSource.filter = this.serchText;\n   }\n \n   ngOnInit(): void {\n     if(this.dataSource.data.length > 0)\n@@ -89,96 +89,4 @@\n       this.isTableHasData = false;\n     }\n   }\n }\n-import { AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\n-import { MatTableModule, MatTable } from '@angular/material/table';\n-import { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\n-import { MatSortModule, MatSort } from '@angular/material/sort';\n-import { OrdersTableDataSource, OrdersTableItem } from './orders-table-datasource';\n-import { MatChipListbox, MatChipsModule } from '@angular/material/chips';\n-import { FormsModule } from '@angular/forms';\n-import { CommonModule } from '@angular/common';\n-import { MatListModule } from '@angular/material/list';\n-import { MatCardModule } from '@angular/material/card';\n-import { MatIconModule } from '@angular/material/icon';\n-import { Router } from '@angular/router';\n-import { MatButtonModule } from '@angular/material/button';\n-import { MatInputModule } from '@angular/material/input';\n-\n-@Component({\n-  selector: 'app-orders-table',\n-  templateUrl: './orders-table.component.html',\n-  styleUrls: ['./orders-table.component.css'],\n-  standalone: true,\n-  imports: [\n-    MatTableModule,\n-    MatPaginatorModule,\n-    MatSortModule,\n-    MatChipsModule,\n-    MatListModule,\n-    FormsModule,\n-    CommonModule,\n-    MatCardModule,\n-    MatIconModule,\n-    MatButtonModule,\n-    MatInputModule,\n-    MatChipsModule\n-  ]\n-})\n-export class OrdersTableComponent implements AfterViewInit, OnInit, OnChanges {\n-  @ViewChild(MatPaginator) paginator!: MatPaginator;\n-  @ViewChild(MatSort, { static: true }) sort!: MatSort;\n-  @ViewChild(MatTable) table!: MatTable<OrdersTableItem>;\n-  dataSource = new OrdersTableDataSource();\n-\n-  isTableHasData: boolean = false;\n-  @Input() showAddButton: boolean = true;\n-  @Input() isAdmin: boolean = false;\n-  serchText: any;\n-  \n-  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n-  displayedColumns = [\n-    \"orderId\",\n-    \"date\",\n-    \"user\",\n-    \"status\",\n-    \"orderTotal\",\n-    \"paymentMode\",\n-    \"actions\"\n-  ];\n-\n-  ngAfterViewInit(): void {\n-    this.dataSource.sort = this.sort;\n-    this.dataSource.paginator = this.paginator;\n-    this.table.dataSource = this.dataSource;\n-    this.dataSource.filter = this.serchText;\n-  }\n-\n-  constructor(private router: Router ) {}\n-\n-  ngOnChanges(changes: SimpleChanges): void {\n-   this.dataSource.filter = this.serchText;\n-  }\n-\n-  ngOnInit(): void {\n-    if(this.dataSource.data.length > 0)\n-      this.isTableHasData = true;\n-  }\n-\n-  addNew() {\n-    this.router.navigateByUrl('/orders/new');\n-  }\n-\n-  /**\n-   * \n-   * @param filterValue \n-   */\n-  applyFilter(filterValue: any) {\n-    this.dataSource.filter = filterValue.target.value.trim().toLowerCase();\n-    if(this.dataSource.data.length > 0){\n-      this.isTableHasData = true;\n-    } else {\n-      this.isTableHasData = false;\n-    }\n-  }\n-}\n"
                },
                {
                    "date": 1704264394698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\n-import { MatTableModule, MatTable, MatTableDataSource } from '@angular/material/table';\n+import { MatTableModule, MatTable } from '@angular/material/table';\n import { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\n import { MatSortModule, MatSort } from '@angular/material/sort';\n import { OrdersTableDataSource, OrdersTableItem } from './orders-table-datasource';\n import { MatChipListbox, MatChipsModule } from '@angular/material/chips';\n@@ -36,9 +36,9 @@\n export class OrdersTableComponent implements AfterViewInit, OnInit, OnChanges {\n   @ViewChild(MatPaginator) paginator!: MatPaginator;\n   @ViewChild(MatSort, { static: true }) sort!: MatSort;\n   @ViewChild(MatTable) table!: MatTable<OrdersTableItem>;\n-  dataSource = new MatTableDataSource();\n+  dataSource = new OrdersTableDataSource();\n \n   isTableHasData: boolean = false;\n   @Input() showAddButton: boolean = true;\n   @Input() isAdmin: boolean = false;\n@@ -57,9 +57,9 @@\n \n   ngAfterViewInit(): void {\n     this.dataSource.sort = this.sort;\n     this.dataSource.paginator = this.paginator;\n-    // this.table.dataSource = this.dataSource;\n+    this.table.dataSource = this.dataSource;\n     this.dataSource.filter = '5';\n   }\n \n   constructor(private router: Router ) {}\n"
                },
                {
                    "date": 1704264402301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n   ngAfterViewInit(): void {\n     this.dataSource.sort = this.sort;\n     this.dataSource.paginator = this.paginator;\n     this.table.dataSource = this.dataSource;\n-    this.dataSource.filter = '5';\n+    // this.dataSource.filter = '5';\n   }\n \n   constructor(private router: Router ) {}\n \n"
                },
                {
                    "date": 1704264409113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,8 @@\n   ngAfterViewInit(): void {\n     this.dataSource.sort = this.sort;\n     this.dataSource.paginator = this.paginator;\n     this.table.dataSource = this.dataSource;\n-    // this.dataSource.filter = '5';\n   }\n \n   constructor(private router: Router ) {}\n \n"
                },
                {
                    "date": 1704264625341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\n-import { MatTableModule, MatTable } from '@angular/material/table';\n+import { MatTableModule, MatTable, MatTableDataSource } from '@angular/material/table';\n import { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\n import { MatSortModule, MatSort } from '@angular/material/sort';\n-import { OrdersTableDataSource, OrdersTableItem } from './orders-table-datasource';\n+import { EXAMPLE_DATA, OrdersTableDataSource, OrdersTableItem } from './orders-table-datasource';\n import { MatChipListbox, MatChipsModule } from '@angular/material/chips';\n import { FormsModule } from '@angular/forms';\n import { CommonModule } from '@angular/common';\n import { MatListModule } from '@angular/material/list';\n@@ -12,8 +12,9 @@\n import { Router } from '@angular/router';\n import { MatButtonModule } from '@angular/material/button';\n import { MatInputModule } from '@angular/material/input';\n \n+\n @Component({\n   selector: 'app-orders-table',\n   templateUrl: './orders-table.component.html',\n   styleUrls: ['./orders-table.component.css'],\n@@ -36,9 +37,9 @@\n export class OrdersTableComponent implements AfterViewInit, OnInit, OnChanges {\n   @ViewChild(MatPaginator) paginator!: MatPaginator;\n   @ViewChild(MatSort, { static: true }) sort!: MatSort;\n   @ViewChild(MatTable) table!: MatTable<OrdersTableItem>;\n-  dataSource = new OrdersTableDataSource();\n+  dataSource = new MatTableDataSource<OrdersTableItem>(EXAMPLE_DATA);\n \n   isTableHasData: boolean = false;\n   @Input() showAddButton: boolean = true;\n   @Input() isAdmin: boolean = false;\n"
                },
                {
                    "date": 1704264687506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n     MatInputModule,\n     MatChipsModule\n   ]\n })\n-export class OrdersTableComponent implements AfterViewInit, OnInit, OnChanges {\n+export class OrdersTableComponent implements AfterViewInit, OnInit {\n   @ViewChild(MatPaginator) paginator!: MatPaginator;\n   @ViewChild(MatSort, { static: true }) sort!: MatSort;\n   @ViewChild(MatTable) table!: MatTable<OrdersTableItem>;\n   dataSource = new MatTableDataSource<OrdersTableItem>(EXAMPLE_DATA);\n@@ -63,12 +63,8 @@\n   }\n \n   constructor(private router: Router ) {}\n \n-  ngOnChanges(changes: SimpleChanges): void {\n-  //  this.dataSource.filter = this.serchText;\n-  }\n-\n   ngOnInit(): void {\n     if(this.dataSource.data.length > 0)\n       this.isTableHasData = true;\n   }\n"
                },
                {
                    "date": 1704264714308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\n import { MatTableModule, MatTable, MatTableDataSource } from '@angular/material/table';\n import { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\n import { MatSortModule, MatSort } from '@angular/material/sort';\n-import { EXAMPLE_DATA, OrdersTableDataSource, OrdersTableItem } from './orders-table-datasource';\n+import { EXAMPLE_ORDER_DATA, OrdersTableDataSource, OrdersTableItem } from './orders-table-datasource';\n import { MatChipListbox, MatChipsModule } from '@angular/material/chips';\n import { FormsModule } from '@angular/forms';\n import { CommonModule } from '@angular/common';\n import { MatListModule } from '@angular/material/list';\n@@ -37,9 +37,9 @@\n export class OrdersTableComponent implements AfterViewInit, OnInit {\n   @ViewChild(MatPaginator) paginator!: MatPaginator;\n   @ViewChild(MatSort, { static: true }) sort!: MatSort;\n   @ViewChild(MatTable) table!: MatTable<OrdersTableItem>;\n-  dataSource = new MatTableDataSource<OrdersTableItem>(EXAMPLE_DATA);\n+  dataSource = new MatTableDataSource<OrdersTableItem>(EXAMPLE_ORDER_DATA);\n \n   isTableHasData: boolean = false;\n   @Input() showAddButton: boolean = true;\n   @Input() isAdmin: boolean = false;\n"
                }
            ],
            "date": 1703746971886,
            "name": "Commit-0",
            "content": "import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableModule, MatTable } from '@angular/material/table';\nimport { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\nimport { MatSortModule, MatSort } from '@angular/material/sort';\nimport { OrdersTableDataSource, OrdersTableItem } from './orders-table-datasource';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'app-orders-table',\n  templateUrl: './orders-table.component.html',\n  styleUrls: ['./orders-table.component.css'],\n  standalone: true,\n  imports: [\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatChipsModule,\n    MatListModule,\n    FormsModule,\n    CommonModule,\n    MatCardModule\n  ]\n})\nexport class OrdersTableComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatTable) table!: MatTable<OrdersTableItem>;\n  dataSource = new OrdersTableDataSource();\n  dataLength: number = 0;\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = [\n    \"id\",\n    \"date\",\n    \"name\",\n    \"status\",\n    \"orderTotal\",\n    \"paymentMode\",\n  ];\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n\n  ngOnInit(): void {\n    // throw new Error('Method not implemented.');\n  }\n}\n"
        }
    ]
}