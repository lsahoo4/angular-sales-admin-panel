{
    "sourceFile": "src/app/dashboard/dashboard.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 18,
            "patches": [
                {
                    "date": 1703577070235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1703577500916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n import { MatButtonModule } from '@angular/material/button';\n import { MatCardModule } from '@angular/material/card';\n import { CommonModule } from '@angular/common';\n import { FormsModule } from '@angular/forms';\n+import { CardComponent } from '../card/card.component';\n \n @Component({\n   selector: 'app-dashboard',\n   templateUrl: './dashboard.component.html',\n@@ -20,31 +21,32 @@\n     MatIconModule,\n     MatButtonModule,\n     MatCardModule,\n     CommonModule,\n-    FormsModule\n+    FormsModule,\n+    CardComponent\n   ]\n })\n export class DashboardComponent {\n   private breakpointObserver = inject(BreakpointObserver);\n \n   /** Based on the screen size, switch from standard to one column per row */\n-  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n+  cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n     map(({ matches }) => {\n       if (matches) {\n-        return [\n-          { title: 'Card 1', cols: 1, rows: 1 },\n-          { title: 'Card 2', cols: 1, rows: 1 },\n-          { title: 'Card 3', cols: 1, rows: 1 },\n-          { title: 'Card 4', cols: 1, rows: 1 }\n-        ];\n+        return {\n+          columns: 1,\n+          miniCard: { cols: 1, rows: 1 },\n+          chart: { cols: 1, rows: 2 },\n+          table: { cols: 1, rows: 4 },\n+        };\n       }\n-\n-      return [\n-        { title: 'Card 1', cols: 2, rows: 1 },\n-        { title: 'Card 2', cols: 1, rows: 1 },\n-        { title: 'Card 3', cols: 1, rows: 2 },\n-        { title: 'Card 4', cols: 1, rows: 1 }\n-      ];\n+ \n+     return {\n+        columns: 4,\n+        miniCard: { cols: 1, rows: 1 },\n+        chart: { cols: 2, rows: 2 },\n+        table: { cols: 4, rows: 4 },\n+      };\n     })\n   );\n }\n"
                },
                {
                    "date": 1703651469159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,12 @@\n import { MatCardModule } from '@angular/material/card';\n import { CommonModule } from '@angular/common';\n import { FormsModule } from '@angular/forms';\n import { CardComponent } from '../card/card.component';\n+import { AnnualSalesChartComponent } from '../charts/annual-sales-chart/annual-sales-chart.component';\n+import { ProductSalesChartComponent } from '../charts/product-sales-chart/product-sales-chart.component';\n+import { SalesTrafficChartComponent } from '../charts/sales-traffic-chart/sales-traffic-chart.component';\n+import { StoreSessionsChartComponent } from '../charts/store-sessions-chart/store-sessions-chart.component';\n \n @Component({\n   selector: 'app-dashboard',\n   templateUrl: './dashboard.component.html',\n@@ -22,9 +26,13 @@\n     MatButtonModule,\n     MatCardModule,\n     CommonModule,\n     FormsModule,\n-    CardComponent\n+    CardComponent,\n+    AnnualSalesChartComponent,\n+    ProductSalesChartComponent,\n+    SalesTrafficChartComponent,\n+    StoreSessionsChartComponent\n   ]\n })\n export class DashboardComponent {\n   private breakpointObserver = inject(BreakpointObserver);\n"
                },
                {
                    "date": 1703653191603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n import { AnnualSalesChartComponent } from '../charts/annual-sales-chart/annual-sales-chart.component';\n import { ProductSalesChartComponent } from '../charts/product-sales-chart/product-sales-chart.component';\n import { SalesTrafficChartComponent } from '../charts/sales-traffic-chart/sales-traffic-chart.component';\n import { StoreSessionsChartComponent } from '../charts/store-sessions-chart/store-sessions-chart.component';\n+import { OrdersTableComponent } from '../orders-table/orders-table.component';\n \n @Component({\n   selector: 'app-dashboard',\n   templateUrl: './dashboard.component.html',\n@@ -30,9 +31,10 @@\n     CardComponent,\n     AnnualSalesChartComponent,\n     ProductSalesChartComponent,\n     SalesTrafficChartComponent,\n-    StoreSessionsChartComponent\n+    StoreSessionsChartComponent,\n+    OrdersTableComponent\n   ]\n })\n export class DashboardComponent {\n   private breakpointObserver = inject(BreakpointObserver);\n"
                },
                {
                    "date": 1703654550361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n   ]\n })\n export class DashboardComponent {\n   private breakpointObserver = inject(BreakpointObserver);\n-\n+  miniCardData: any[] = [ 1,2,3,4];\n   /** Based on the screen size, switch from standard to one column per row */\n   cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n     map(({ matches }) => {\n       if (matches) {\n"
                },
                {
                    "date": 1703654779641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+import { Component, inject } from '@angular/core';\n+import { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n+import { map } from 'rxjs/operators';\n+import { MatGridListModule } from '@angular/material/grid-list';\n+import { MatMenuModule } from '@angular/material/menu';\n+import { MatIconModule } from '@angular/material/icon';\n+import { MatButtonModule } from '@angular/material/button';\n+import { MatCardModule } from '@angular/material/card';\n+import { CommonModule } from '@angular/common';\n+import { FormsModule } from '@angular/forms';\n+import { CardComponent } from '../card/card.component';\n+import { AnnualSalesChartComponent } from '../charts/annual-sales-chart/annual-sales-chart.component';\n+import { ProductSalesChartComponent } from '../charts/product-sales-chart/product-sales-chart.component';\n+import { SalesTrafficChartComponent } from '../charts/sales-traffic-chart/sales-traffic-chart.component';\n+import { StoreSessionsChartComponent } from '../charts/store-sessions-chart/store-sessions-chart.component';\n+import { OrdersTableComponent } from '../orders-table/orders-table.component';\n+import { MiniCardComponent } from '../mini-card/mini-card.component';\n+\n+@Component({\n+  selector: 'app-dashboard',\n+  templateUrl: './dashboard.component.html',\n+  styleUrls: ['./dashboard.component.css'],\n+  standalone: true,\n+  imports: [\n+    MatGridListModule,\n+    MatMenuModule,\n+    MatIconModule,\n+    MatButtonModule,\n+    MatCardModule,\n+    CommonModule,\n+    FormsModule,\n+    CardComponent,\n+    AnnualSalesChartComponent,\n+    ProductSalesChartComponent,\n+    SalesTrafficChartComponent,\n+    StoreSessionsChartComponent,\n+    OrdersTableComponent,\n+    MiniCardComponent\n+  ]\n+})\n+export class DashboardComponent {\n+  private breakpointObserver = inject(BreakpointObserver);\n+  miniCardData: any[] = \n+  [ \n+    {title: '', textValue: '', value: '', color: '', percentValue: '' },,\n+    {title: '', textValue: '', value: '', color: '', percentValue: '' },\n+    {title: '', textValue: '', value: '', color: '', percentValue: '' },\n+    {title: '', textValue: '', value: '', color: '', percentValue: '' }\n+  ];\n+  /** Based on the screen size, switch from standard to one column per row */\n+  cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n+    map(({ matches }) => {\n+      if (matches) {\n+        return {\n+          columns: 1,\n+          miniCard: { cols: 1, rows: 1 },\n+          chart: { cols: 1, rows: 2 },\n+          table: { cols: 1, rows: 4 },\n+        };\n+      }\n+ \n+     return {\n+        columns: 4,\n+        miniCard: { cols: 1, rows: 1 },\n+        chart: { cols: 2, rows: 2 },\n+        table: { cols: 4, rows: 4 },\n+      };\n+    })\n+  );\n+}\n"
                },
                {
                    "date": 1703655319455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+import { Component, inject } from '@angular/core';\n+import { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n+import { map } from 'rxjs/operators';\n+import { MatGridListModule } from '@angular/material/grid-list';\n+import { MatMenuModule } from '@angular/material/menu';\n+import { MatIconModule } from '@angular/material/icon';\n+import { MatButtonModule } from '@angular/material/button';\n+import { MatCardModule } from '@angular/material/card';\n+import { CommonModule } from '@angular/common';\n+import { FormsModule } from '@angular/forms';\n+import { CardComponent } from '../card/card.component';\n+import { AnnualSalesChartComponent } from '../charts/annual-sales-chart/annual-sales-chart.component';\n+import { ProductSalesChartComponent } from '../charts/product-sales-chart/product-sales-chart.component';\n+import { SalesTrafficChartComponent } from '../charts/sales-traffic-chart/sales-traffic-chart.component';\n+import { StoreSessionsChartComponent } from '../charts/store-sessions-chart/store-sessions-chart.component';\n+import { OrdersTableComponent } from '../orders-table/orders-table.component';\n+import { MiniCardComponent } from '../mini-card/mini-card.component';\n+\n+@Component({\n+  selector: 'app-dashboard',\n+  templateUrl: './dashboard.component.html',\n+  styleUrls: ['./dashboard.component.css'],\n+  standalone: true,\n+  imports: [\n+    MatGridListModule,\n+    MatMenuModule,\n+    MatIconModule,\n+    MatButtonModule,\n+    MatCardModule,\n+    CommonModule,\n+    FormsModule,\n+    CardComponent,\n+    AnnualSalesChartComponent,\n+    ProductSalesChartComponent,\n+    SalesTrafficChartComponent,\n+    StoreSessionsChartComponent,\n+    OrdersTableComponent,\n+    MiniCardComponent\n+  ]\n+})\n+export class DashboardComponent {\n+  private breakpointObserver = inject(BreakpointObserver);\n+  miniCardData: any[] = \n+  [ \n+    {title: 'Total Sales', textValue: 'since last month', value: '9465', color: '', percentValue: '+53.83%' },,\n+    {title: 'Average Order Value', textValue: 'since last month', value: '465', color: '', percentValue: '-25.44%' },\n+    {title: 'Total Orders', textValue: 'since last month', value: '243', color: '', percentValue: '+45.65%' },\n+    {title: 'Returning Customers', textValue: 'since last month', value: '35', color: '', percentValue: '-83.61%' }\n+  ];\n+  /** Based on the screen size, switch from standard to one column per row */\n+  cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n+    map(({ matches }) => {\n+      if (matches) {\n+        return {\n+          columns: 1,\n+          miniCard: { cols: 1, rows: 1 },\n+          chart: { cols: 1, rows: 2 },\n+          table: { cols: 1, rows: 4 },\n+        };\n+      }\n+ \n+     return {\n+        columns: 4,\n+        miniCard: { cols: 1, rows: 1 },\n+        chart: { cols: 2, rows: 2 },\n+        table: { cols: 4, rows: 4 },\n+      };\n+    })\n+  );\n+}\n"
                },
                {
                    "date": 1703655442544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,79 @@\n+import { Component, inject } from '@angular/core';\n+import { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n+import { map } from 'rxjs/operators';\n+import { MatGridListModule } from '@angular/material/grid-list';\n+import { MatMenuModule } from '@angular/material/menu';\n+import { MatIconModule } from '@angular/material/icon';\n+import { MatButtonModule } from '@angular/material/button';\n+import { MatCardModule } from '@angular/material/card';\n+import { CommonModule } from '@angular/common';\n+import { FormsModule } from '@angular/forms';\n+import { CardComponent } from '../card/card.component';\n+import { AnnualSalesChartComponent } from '../charts/annual-sales-chart/annual-sales-chart.component';\n+import { ProductSalesChartComponent } from '../charts/product-sales-chart/product-sales-chart.component';\n+import { SalesTrafficChartComponent } from '../charts/sales-traffic-chart/sales-traffic-chart.component';\n+import { StoreSessionsChartComponent } from '../charts/store-sessions-chart/store-sessions-chart.component';\n+import { OrdersTableComponent } from '../orders-table/orders-table.component';\n+import { MiniCardComponent } from '../mini-card/mini-card.component';\n+\n+@Component({\n+  selector: 'app-dashboard',\n+  templateUrl: './dashboard.component.html',\n+  styleUrls: ['./dashboard.component.css'],\n+  standalone: true,\n+  imports: [\n+    MatGridListModule,\n+    MatMenuModule,\n+    MatIconModule,\n+    MatButtonModule,\n+    MatCardModule,\n+    CommonModule,\n+    FormsModule,\n+    CardComponent,\n+    AnnualSalesChartComponent,\n+    ProductSalesChartComponent,\n+    SalesTrafficChartComponent,\n+    StoreSessionsChartComponent,\n+    OrdersTableComponent,\n+    MiniCardComponent\n+  ]\n+})\n+export class DashboardComponent {\n+  private breakpointObserver = inject(BreakpointObserver);\n+  miniCardData: any[] = \n+  [ \n+    {title: 'Total Sales', textValue: 'since last month', value: '9465', color: '', percentValue: '+53.83%' },,\n+    {title: 'Average Order Value', textValue: 'since last month', value: '465', color: '', percentValue: '-25.44%' },\n+    {title: 'Total Orders', textValue: 'since last month', value: '243', color: '', percentValue: '+45.65%' },\n+    {title: 'Returning Customers', textValue: 'since last month', value: '35', color: '', percentValue: '-83.61%' }\n+  ];\n+  /** Based on the screen size, switch from standard to one column per row */\n+  cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n+    map(({ matches }) => {\n+      if (matches) {\n+        return {\n+          columns: 1,\n+          miniCard: { cols: 1, rows: 1 },\n+          chart: { cols: 1, rows: 2 },\n+          table: { cols: 1, rows: 4 },\n+        };\n+      }\n+ \n+     return {\n+        columns: 4,\n+        miniCard: { cols: 1, rows: 1 },\n+        chart: { cols: 2, rows: 2 },\n+        table: { cols: 4, rows: 4 },\n+      };\n+    })\n+  );\n+\n+  constructor() {\n+    this.miniCardData = [ \n+      {title: 'Total Sales', textValue: 'since last month', value: '9465', color: '', percentValue: '+53.83%' },,\n+      {title: 'Average Order Value', textValue: 'since last month', value: '465', color: '', percentValue: '-25.44%' },\n+      {title: 'Total Orders', textValue: 'since last month', value: '243', color: '', percentValue: '+45.65%' },\n+      {title: 'Returning Customers', textValue: 'since last month', value: '35', color: '', percentValue: '-83.61%' }\n+    ];\n+  }\n+}\n"
                },
                {
                    "date": 1703655633699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,15 +39,9 @@\n   ]\n })\n export class DashboardComponent {\n   private breakpointObserver = inject(BreakpointObserver);\n-  miniCardData: any[] = \n-  [ \n-    {title: 'Total Sales', textValue: 'since last month', value: '9465', color: '', percentValue: '+53.83%' },,\n-    {title: 'Average Order Value', textValue: 'since last month', value: '465', color: '', percentValue: '-25.44%' },\n-    {title: 'Total Orders', textValue: 'since last month', value: '243', color: '', percentValue: '+45.65%' },\n-    {title: 'Returning Customers', textValue: 'since last month', value: '35', color: '', percentValue: '-83.61%' }\n-  ];\n+  miniCardData: any[] = [];\n   /** Based on the screen size, switch from standard to one column per row */\n   cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n     map(({ matches }) => {\n       if (matches) {\n@@ -76,206 +70,4 @@\n       {title: 'Returning Customers', textValue: 'since last month', value: '35', color: '', percentValue: '-83.61%' }\n     ];\n   }\n }\n-import { Component, inject } from '@angular/core';\n-import { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n-import { map } from 'rxjs/operators';\n-import { MatGridListModule } from '@angular/material/grid-list';\n-import { MatMenuModule } from '@angular/material/menu';\n-import { MatIconModule } from '@angular/material/icon';\n-import { MatButtonModule } from '@angular/material/button';\n-import { MatCardModule } from '@angular/material/card';\n-import { CommonModule } from '@angular/common';\n-import { FormsModule } from '@angular/forms';\n-import { CardComponent } from '../card/card.component';\n-import { AnnualSalesChartComponent } from '../charts/annual-sales-chart/annual-sales-chart.component';\n-import { ProductSalesChartComponent } from '../charts/product-sales-chart/product-sales-chart.component';\n-import { SalesTrafficChartComponent } from '../charts/sales-traffic-chart/sales-traffic-chart.component';\n-import { StoreSessionsChartComponent } from '../charts/store-sessions-chart/store-sessions-chart.component';\n-import { OrdersTableComponent } from '../orders-table/orders-table.component';\n-import { MiniCardComponent } from '../mini-card/mini-card.component';\n-\n-@Component({\n-  selector: 'app-dashboard',\n-  templateUrl: './dashboard.component.html',\n-  styleUrls: ['./dashboard.component.css'],\n-  standalone: true,\n-  imports: [\n-    MatGridListModule,\n-    MatMenuModule,\n-    MatIconModule,\n-    MatButtonModule,\n-    MatCardModule,\n-    CommonModule,\n-    FormsModule,\n-    CardComponent,\n-    AnnualSalesChartComponent,\n-    ProductSalesChartComponent,\n-    SalesTrafficChartComponent,\n-    StoreSessionsChartComponent,\n-    OrdersTableComponent,\n-    MiniCardComponent\n-  ]\n-})\n-export class DashboardComponent {\n-  private breakpointObserver = inject(BreakpointObserver);\n-  miniCardData: any[] = \n-  [ \n-    {title: 'Total Sales', textValue: 'since last month', value: '9465', color: '', percentValue: '+53.83%' },,\n-    {title: 'Average Order Value', textValue: 'since last month', value: '465', color: '', percentValue: '-25.44%' },\n-    {title: 'Total Orders', textValue: 'since last month', value: '243', color: '', percentValue: '+45.65%' },\n-    {title: 'Returning Customers', textValue: 'since last month', value: '35', color: '', percentValue: '-83.61%' }\n-  ];\n-  /** Based on the screen size, switch from standard to one column per row */\n-  cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n-    map(({ matches }) => {\n-      if (matches) {\n-        return {\n-          columns: 1,\n-          miniCard: { cols: 1, rows: 1 },\n-          chart: { cols: 1, rows: 2 },\n-          table: { cols: 1, rows: 4 },\n-        };\n-      }\n- \n-     return {\n-        columns: 4,\n-        miniCard: { cols: 1, rows: 1 },\n-        chart: { cols: 2, rows: 2 },\n-        table: { cols: 4, rows: 4 },\n-      };\n-    })\n-  );\n-}\n-import { Component, inject } from '@angular/core';\n-import { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n-import { map } from 'rxjs/operators';\n-import { MatGridListModule } from '@angular/material/grid-list';\n-import { MatMenuModule } from '@angular/material/menu';\n-import { MatIconModule } from '@angular/material/icon';\n-import { MatButtonModule } from '@angular/material/button';\n-import { MatCardModule } from '@angular/material/card';\n-import { CommonModule } from '@angular/common';\n-import { FormsModule } from '@angular/forms';\n-import { CardComponent } from '../card/card.component';\n-import { AnnualSalesChartComponent } from '../charts/annual-sales-chart/annual-sales-chart.component';\n-import { ProductSalesChartComponent } from '../charts/product-sales-chart/product-sales-chart.component';\n-import { SalesTrafficChartComponent } from '../charts/sales-traffic-chart/sales-traffic-chart.component';\n-import { StoreSessionsChartComponent } from '../charts/store-sessions-chart/store-sessions-chart.component';\n-import { OrdersTableComponent } from '../orders-table/orders-table.component';\n-import { MiniCardComponent } from '../mini-card/mini-card.component';\n-\n-@Component({\n-  selector: 'app-dashboard',\n-  templateUrl: './dashboard.component.html',\n-  styleUrls: ['./dashboard.component.css'],\n-  standalone: true,\n-  imports: [\n-    MatGridListModule,\n-    MatMenuModule,\n-    MatIconModule,\n-    MatButtonModule,\n-    MatCardModule,\n-    CommonModule,\n-    FormsModule,\n-    CardComponent,\n-    AnnualSalesChartComponent,\n-    ProductSalesChartComponent,\n-    SalesTrafficChartComponent,\n-    StoreSessionsChartComponent,\n-    OrdersTableComponent,\n-    MiniCardComponent\n-  ]\n-})\n-export class DashboardComponent {\n-  private breakpointObserver = inject(BreakpointObserver);\n-  miniCardData: any[] = \n-  [ \n-    {title: '', textValue: '', value: '', color: '', percentValue: '' },,\n-    {title: '', textValue: '', value: '', color: '', percentValue: '' },\n-    {title: '', textValue: '', value: '', color: '', percentValue: '' },\n-    {title: '', textValue: '', value: '', color: '', percentValue: '' }\n-  ];\n-  /** Based on the screen size, switch from standard to one column per row */\n-  cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n-    map(({ matches }) => {\n-      if (matches) {\n-        return {\n-          columns: 1,\n-          miniCard: { cols: 1, rows: 1 },\n-          chart: { cols: 1, rows: 2 },\n-          table: { cols: 1, rows: 4 },\n-        };\n-      }\n- \n-     return {\n-        columns: 4,\n-        miniCard: { cols: 1, rows: 1 },\n-        chart: { cols: 2, rows: 2 },\n-        table: { cols: 4, rows: 4 },\n-      };\n-    })\n-  );\n-}\n-import { Component, inject } from '@angular/core';\n-import { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n-import { map } from 'rxjs/operators';\n-import { MatGridListModule } from '@angular/material/grid-list';\n-import { MatMenuModule } from '@angular/material/menu';\n-import { MatIconModule } from '@angular/material/icon';\n-import { MatButtonModule } from '@angular/material/button';\n-import { MatCardModule } from '@angular/material/card';\n-import { CommonModule } from '@angular/common';\n-import { FormsModule } from '@angular/forms';\n-import { CardComponent } from '../card/card.component';\n-import { AnnualSalesChartComponent } from '../charts/annual-sales-chart/annual-sales-chart.component';\n-import { ProductSalesChartComponent } from '../charts/product-sales-chart/product-sales-chart.component';\n-import { SalesTrafficChartComponent } from '../charts/sales-traffic-chart/sales-traffic-chart.component';\n-import { StoreSessionsChartComponent } from '../charts/store-sessions-chart/store-sessions-chart.component';\n-import { OrdersTableComponent } from '../orders-table/orders-table.component';\n-\n-@Component({\n-  selector: 'app-dashboard',\n-  templateUrl: './dashboard.component.html',\n-  styleUrls: ['./dashboard.component.css'],\n-  standalone: true,\n-  imports: [\n-    MatGridListModule,\n-    MatMenuModule,\n-    MatIconModule,\n-    MatButtonModule,\n-    MatCardModule,\n-    CommonModule,\n-    FormsModule,\n-    CardComponent,\n-    AnnualSalesChartComponent,\n-    ProductSalesChartComponent,\n-    SalesTrafficChartComponent,\n-    StoreSessionsChartComponent,\n-    OrdersTableComponent\n-  ]\n-})\n-export class DashboardComponent {\n-  private breakpointObserver = inject(BreakpointObserver);\n-  miniCardData: any[] = [ 1,2,3,4];\n-  /** Based on the screen size, switch from standard to one column per row */\n-  cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n-    map(({ matches }) => {\n-      if (matches) {\n-        return {\n-          columns: 1,\n-          miniCard: { cols: 1, rows: 1 },\n-          chart: { cols: 1, rows: 2 },\n-          table: { cols: 1, rows: 4 },\n-        };\n-      }\n- \n-     return {\n-        columns: 4,\n-        miniCard: { cols: 1, rows: 1 },\n-        chart: { cols: 2, rows: 2 },\n-        table: { cols: 4, rows: 4 },\n-      };\n-    })\n-  );\n-}\n"
                },
                {
                    "date": 1703656162714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+import { Component, inject } from '@angular/core';\n+import { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n+import { map } from 'rxjs/operators';\n+import { MatGridListModule } from '@angular/material/grid-list';\n+import { MatMenuModule } from '@angular/material/menu';\n+import { MatIconModule } from '@angular/material/icon';\n+import { MatButtonModule } from '@angular/material/button';\n+import { MatCardModule } from '@angular/material/card';\n+import { CommonModule } from '@angular/common';\n+import { FormsModule } from '@angular/forms';\n+import { CardComponent } from '../card/card.component';\n+import { AnnualSalesChartComponent } from '../charts/annual-sales-chart/annual-sales-chart.component';\n+import { ProductSalesChartComponent } from '../charts/product-sales-chart/product-sales-chart.component';\n+import { SalesTrafficChartComponent } from '../charts/sales-traffic-chart/sales-traffic-chart.component';\n+import { StoreSessionsChartComponent } from '../charts/store-sessions-chart/store-sessions-chart.component';\n+import { OrdersTableComponent } from '../orders-table/orders-table.component';\n+import { MiniCardComponent } from '../mini-card/mini-card.component';\n+\n+@Component({\n+  selector: 'app-dashboard',\n+  templateUrl: './dashboard.component.html',\n+  styleUrls: ['./dashboard.component.css'],\n+  standalone: true,\n+  imports: [\n+    MatGridListModule,\n+    MatMenuModule,\n+    MatIconModule,\n+    MatButtonModule,\n+    MatCardModule,\n+    CommonModule,\n+    FormsModule,\n+    CardComponent,\n+    AnnualSalesChartComponent,\n+    ProductSalesChartComponent,\n+    SalesTrafficChartComponent,\n+    StoreSessionsChartComponent,\n+    OrdersTableComponent,\n+    MiniCardComponent\n+  ]\n+})\n+export class DashboardComponent {\n+  private breakpointObserver = inject(BreakpointObserver);\n+  miniCardData: any[] = [];\n+  /** Based on the screen size, switch from standard to one column per row */\n+  cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n+    map(({ matches }) => {\n+      if (matches) {\n+        return {\n+          columns: 1,\n+          miniCard: { cols: 1, rows: 1 },\n+          chart: { cols: 1, rows: 2 },\n+          table: { cols: 1, rows: 4 },\n+        };\n+      }\n+ \n+     return {\n+        columns: 4,\n+        miniCard: { cols: 1, rows: 1 },\n+        chart: { cols: 2, rows: 2 },\n+        table: { cols: 4, rows: 4 },\n+      };\n+    })\n+  );\n+\n+  constructor() {\n+    this.miniCardData = [{title: 'Total Sales', textValue: 'since last month', value: '9465', color: '', percentValue: '+53.83%' },,\n+      {title: 'Average Order Value', textValue: 'since last month', value: '465', color: '', percentValue: '-25.44%' },\n+      {title: 'Total Orders', textValue: 'since last month', value: '243', color: '', percentValue: '+45.65%' },\n+      {title: 'Returning Customers', textValue: 'since last month', value: '35', color: '', percentValue: '-83.61%' }];\n+  }\n+}\n"
                },
                {
                    "date": 1703656188947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,83 +62,11 @@\n     })\n   );\n \n   constructor() {\n+    this.miniCardData = [];\n     this.miniCardData = [{title: 'Total Sales', textValue: 'since last month', value: '9465', color: '', percentValue: '+53.83%' },,\n       {title: 'Average Order Value', textValue: 'since last month', value: '465', color: '', percentValue: '-25.44%' },\n       {title: 'Total Orders', textValue: 'since last month', value: '243', color: '', percentValue: '+45.65%' },\n       {title: 'Returning Customers', textValue: 'since last month', value: '35', color: '', percentValue: '-83.61%' }];\n   }\n }\n-import { Component, inject } from '@angular/core';\n-import { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n-import { map } from 'rxjs/operators';\n-import { MatGridListModule } from '@angular/material/grid-list';\n-import { MatMenuModule } from '@angular/material/menu';\n-import { MatIconModule } from '@angular/material/icon';\n-import { MatButtonModule } from '@angular/material/button';\n-import { MatCardModule } from '@angular/material/card';\n-import { CommonModule } from '@angular/common';\n-import { FormsModule } from '@angular/forms';\n-import { CardComponent } from '../card/card.component';\n-import { AnnualSalesChartComponent } from '../charts/annual-sales-chart/annual-sales-chart.component';\n-import { ProductSalesChartComponent } from '../charts/product-sales-chart/product-sales-chart.component';\n-import { SalesTrafficChartComponent } from '../charts/sales-traffic-chart/sales-traffic-chart.component';\n-import { StoreSessionsChartComponent } from '../charts/store-sessions-chart/store-sessions-chart.component';\n-import { OrdersTableComponent } from '../orders-table/orders-table.component';\n-import { MiniCardComponent } from '../mini-card/mini-card.component';\n-\n-@Component({\n-  selector: 'app-dashboard',\n-  templateUrl: './dashboard.component.html',\n-  styleUrls: ['./dashboard.component.css'],\n-  standalone: true,\n-  imports: [\n-    MatGridListModule,\n-    MatMenuModule,\n-    MatIconModule,\n-    MatButtonModule,\n-    MatCardModule,\n-    CommonModule,\n-    FormsModule,\n-    CardComponent,\n-    AnnualSalesChartComponent,\n-    ProductSalesChartComponent,\n-    SalesTrafficChartComponent,\n-    StoreSessionsChartComponent,\n-    OrdersTableComponent,\n-    MiniCardComponent\n-  ]\n-})\n-export class DashboardComponent {\n-  private breakpointObserver = inject(BreakpointObserver);\n-  miniCardData: any[] = [];\n-  /** Based on the screen size, switch from standard to one column per row */\n-  cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n-    map(({ matches }) => {\n-      if (matches) {\n-        return {\n-          columns: 1,\n-          miniCard: { cols: 1, rows: 1 },\n-          chart: { cols: 1, rows: 2 },\n-          table: { cols: 1, rows: 4 },\n-        };\n-      }\n- \n-     return {\n-        columns: 4,\n-        miniCard: { cols: 1, rows: 1 },\n-        chart: { cols: 2, rows: 2 },\n-        table: { cols: 4, rows: 4 },\n-      };\n-    })\n-  );\n-\n-  constructor() {\n-    this.miniCardData = [ \n-      {title: 'Total Sales', textValue: 'since last month', value: '9465', color: '', percentValue: '+53.83%' },,\n-      {title: 'Average Order Value', textValue: 'since last month', value: '465', color: '', percentValue: '-25.44%' },\n-      {title: 'Total Orders', textValue: 'since last month', value: '243', color: '', percentValue: '+45.65%' },\n-      {title: 'Returning Customers', textValue: 'since last month', value: '35', color: '', percentValue: '-83.61%' }\n-    ];\n-  }\n-}\n"
                },
                {
                    "date": 1703656315192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,10 +51,10 @@\n           chart: { cols: 1, rows: 2 },\n           table: { cols: 1, rows: 4 },\n         };\n       }\n- \n-     return {\n+\n+      return {\n         columns: 4,\n         miniCard: { cols: 1, rows: 1 },\n         chart: { cols: 2, rows: 2 },\n         table: { cols: 4, rows: 4 },\n@@ -62,11 +62,11 @@\n     })\n   );\n \n   constructor() {\n-    this.miniCardData = [];\n-    this.miniCardData = [{title: 'Total Sales', textValue: 'since last month', value: '9465', color: '', percentValue: '+53.83%' },,\n-      {title: 'Average Order Value', textValue: 'since last month', value: '465', color: '', percentValue: '-25.44%' },\n-      {title: 'Total Orders', textValue: 'since last month', value: '243', color: '', percentValue: '+45.65%' },\n-      {title: 'Returning Customers', textValue: 'since last month', value: '35', color: '', percentValue: '-83.61%' }];\n+    this.miniCardData = [\n+      { title: 'Total Sales', textValue: 'since last month', value: '9465', color: '', percentValue: '+53.83%' },\n+      { title: 'Average Order Value', textValue: 'since last month', value: '465', color: '', percentValue: '-25.44%' },\n+      { title: 'Total Orders', textValue: 'since last month', value: '243', color: '', percentValue: '+45.65%' },\n+      { title: 'Returning Customers', textValue: 'since last month', value: '35', color: '', percentValue: '-83.61%' }];\n   }\n }\n"
                },
                {
                    "date": 1703659872468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,17 +46,17 @@\n     map(({ matches }) => {\n       if (matches) {\n         return {\n           columns: 1,\n-          miniCard: { cols: 1, rows: 1 },\n+          miniCard: { cols: 1, rows: 4 },\n           chart: { cols: 1, rows: 2 },\n           table: { cols: 1, rows: 4 },\n         };\n       }\n \n       return {\n         columns: 4,\n-        miniCard: { cols: 1, rows: 1 },\n+        miniCard: { cols: 1, rows: 4 },\n         chart: { cols: 2, rows: 2 },\n         table: { cols: 4, rows: 4 },\n       };\n     })\n"
                },
                {
                    "date": 1703659880331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,17 +46,17 @@\n     map(({ matches }) => {\n       if (matches) {\n         return {\n           columns: 1,\n-          miniCard: { cols: 1, rows: 4 },\n+          miniCard: { cols: 1, rows: 1 },\n           chart: { cols: 1, rows: 2 },\n           table: { cols: 1, rows: 4 },\n         };\n       }\n \n       return {\n         columns: 4,\n-        miniCard: { cols: 1, rows: 4 },\n+        miniCard: { cols: 1, rows: 1 },\n         chart: { cols: 2, rows: 2 },\n         table: { cols: 4, rows: 4 },\n       };\n     })\n"
                },
                {
                    "date": 1703660516810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n     ProductSalesChartComponent,\n     SalesTrafficChartComponent,\n     StoreSessionsChartComponent,\n     OrdersTableComponent,\n-    MiniCardComponent\n+    MiniCardComponent,\n   ]\n })\n export class DashboardComponent {\n   private breakpointObserver = inject(BreakpointObserver);\n"
                },
                {
                    "date": 1703660607736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,76 @@\n+import { Component, inject } from '@angular/core';\n+import { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n+import { map } from 'rxjs/operators';\n+import { MatGridListModule } from '@angular/material/grid-list';\n+import { MatMenuModule } from '@angular/material/menu';\n+import { MatIconModule } from '@angular/material/icon';\n+import { MatButtonModule } from '@angular/material/button';\n+import { MatCardModule } from '@angular/material/card';\n+import { CommonModule } from '@angular/common';\n+import { FormsModule } from '@angular/forms';\n+import { CardComponent } from '../card/card.component';\n+import { AnnualSalesChartComponent } from '../charts/annual-sales-chart/annual-sales-chart.component';\n+import { ProductSalesChartComponent } from '../charts/product-sales-chart/product-sales-chart.component';\n+import { SalesTrafficChartComponent } from '../charts/sales-traffic-chart/sales-traffic-chart.component';\n+import { StoreSessionsChartComponent } from '../charts/store-sessions-chart/store-sessions-chart.component';\n+import { OrdersTableComponent } from '../orders-table/orders-table.component';\n+import { MiniCardComponent } from '../mini-card/mini-card.component';\n+import { TotalSaleComponent } from '../mini-card/total-sale/total-sale.component';\n+import { AverageValueComponent } from '../mini-card/average-value/average-value.component';\n+\n+@Component({\n+  selector: 'app-dashboard',\n+  templateUrl: './dashboard.component.html',\n+  styleUrls: ['./dashboard.component.css'],\n+  standalone: true,\n+  imports: [\n+    MatGridListModule,\n+    MatMenuModule,\n+    MatIconModule,\n+    MatButtonModule,\n+    MatCardModule,\n+    CommonModule,\n+    FormsModule,\n+    CardComponent,\n+    AnnualSalesChartComponent,\n+    ProductSalesChartComponent,\n+    SalesTrafficChartComponent,\n+    StoreSessionsChartComponent,\n+    OrdersTableComponent,\n+    MiniCardComponent,\n+    TotalSaleComponent,\n+    AverageValueComponent\n+  ]\n+})\n+export class DashboardComponent {\n+  private breakpointObserver = inject(BreakpointObserver);\n+  miniCardData: any[] = [];\n+  /** Based on the screen size, switch from standard to one column per row */\n+  cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n+    map(({ matches }) => {\n+      if (matches) {\n+        return {\n+          columns: 1,\n+          miniCard: { cols: 1, rows: 1 },\n+          chart: { cols: 1, rows: 2 },\n+          table: { cols: 1, rows: 4 },\n+        };\n+      }\n+\n+      return {\n+        columns: 4,\n+        miniCard: { cols: 1, rows: 1 },\n+        chart: { cols: 2, rows: 2 },\n+        table: { cols: 4, rows: 4 },\n+      };\n+    })\n+  );\n+\n+  constructor() {\n+    this.miniCardData = [\n+      { title: 'Total Sales', textValue: 'since last month', value: '9465', color: '', percentValue: '+53.83%' },\n+      { title: 'Average Order Value', textValue: 'since last month', value: '465', color: '', percentValue: '-25.44%' },\n+      { title: 'Total Orders', textValue: 'since last month', value: '243', color: '', percentValue: '+45.65%' },\n+      { title: 'Returning Customers', textValue: 'since last month', value: '35', color: '', percentValue: '-83.61%' }];\n+  }\n+}\n"
                },
                {
                    "date": 1703660679377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,10 @@\n import { OrdersTableComponent } from '../orders-table/orders-table.component';\n import { MiniCardComponent } from '../mini-card/mini-card.component';\n import { TotalSaleComponent } from '../mini-card/total-sale/total-sale.component';\n import { AverageValueComponent } from '../mini-card/average-value/average-value.component';\n+import { TotalOrderComponent } from '../mini-card/total-order/total-order.component';\n+import { ReturningCuctomerComponent } from '../mini-card/returning-cuctomer/returning-cuctomer.component';\n \n @Component({\n   selector: 'app-dashboard',\n   templateUrl: './dashboard.component.html',\n@@ -38,9 +40,11 @@\n     StoreSessionsChartComponent,\n     OrdersTableComponent,\n     MiniCardComponent,\n     TotalSaleComponent,\n-    AverageValueComponent\n+    AverageValueComponent,\n+    TotalOrderComponent,\n+    ReturningCuctomerComponent\n   ]\n })\n export class DashboardComponent {\n   private breakpointObserver = inject(BreakpointObserver);\n@@ -73,76 +77,4 @@\n       { title: 'Total Orders', textValue: 'since last month', value: '243', color: '', percentValue: '+45.65%' },\n       { title: 'Returning Customers', textValue: 'since last month', value: '35', color: '', percentValue: '-83.61%' }];\n   }\n }\n-import { Component, inject } from '@angular/core';\n-import { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n-import { map } from 'rxjs/operators';\n-import { MatGridListModule } from '@angular/material/grid-list';\n-import { MatMenuModule } from '@angular/material/menu';\n-import { MatIconModule } from '@angular/material/icon';\n-import { MatButtonModule } from '@angular/material/button';\n-import { MatCardModule } from '@angular/material/card';\n-import { CommonModule } from '@angular/common';\n-import { FormsModule } from '@angular/forms';\n-import { CardComponent } from '../card/card.component';\n-import { AnnualSalesChartComponent } from '../charts/annual-sales-chart/annual-sales-chart.component';\n-import { ProductSalesChartComponent } from '../charts/product-sales-chart/product-sales-chart.component';\n-import { SalesTrafficChartComponent } from '../charts/sales-traffic-chart/sales-traffic-chart.component';\n-import { StoreSessionsChartComponent } from '../charts/store-sessions-chart/store-sessions-chart.component';\n-import { OrdersTableComponent } from '../orders-table/orders-table.component';\n-import { MiniCardComponent } from '../mini-card/mini-card.component';\n-\n-@Component({\n-  selector: 'app-dashboard',\n-  templateUrl: './dashboard.component.html',\n-  styleUrls: ['./dashboard.component.css'],\n-  standalone: true,\n-  imports: [\n-    MatGridListModule,\n-    MatMenuModule,\n-    MatIconModule,\n-    MatButtonModule,\n-    MatCardModule,\n-    CommonModule,\n-    FormsModule,\n-    CardComponent,\n-    AnnualSalesChartComponent,\n-    ProductSalesChartComponent,\n-    SalesTrafficChartComponent,\n-    StoreSessionsChartComponent,\n-    OrdersTableComponent,\n-    MiniCardComponent,\n-  ]\n-})\n-export class DashboardComponent {\n-  private breakpointObserver = inject(BreakpointObserver);\n-  miniCardData: any[] = [];\n-  /** Based on the screen size, switch from standard to one column per row */\n-  cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n-    map(({ matches }) => {\n-      if (matches) {\n-        return {\n-          columns: 1,\n-          miniCard: { cols: 1, rows: 1 },\n-          chart: { cols: 1, rows: 2 },\n-          table: { cols: 1, rows: 4 },\n-        };\n-      }\n-\n-      return {\n-        columns: 4,\n-        miniCard: { cols: 1, rows: 1 },\n-        chart: { cols: 2, rows: 2 },\n-        table: { cols: 4, rows: 4 },\n-      };\n-    })\n-  );\n-\n-  constructor() {\n-    this.miniCardData = [\n-      { title: 'Total Sales', textValue: 'since last month', value: '9465', color: '', percentValue: '+53.83%' },\n-      { title: 'Average Order Value', textValue: 'since last month', value: '465', color: '', percentValue: '-25.44%' },\n-      { title: 'Total Orders', textValue: 'since last month', value: '243', color: '', percentValue: '+45.65%' },\n-      { title: 'Returning Customers', textValue: 'since last month', value: '35', color: '', percentValue: '-83.61%' }];\n-  }\n-}\n"
                },
                {
                    "date": 1703746178299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,14 +12,14 @@\n import { AnnualSalesChartComponent } from '../charts/annual-sales-chart/annual-sales-chart.component';\n import { ProductSalesChartComponent } from '../charts/product-sales-chart/product-sales-chart.component';\n import { SalesTrafficChartComponent } from '../charts/sales-traffic-chart/sales-traffic-chart.component';\n import { StoreSessionsChartComponent } from '../charts/store-sessions-chart/store-sessions-chart.component';\n-import { OrdersTableComponent } from '../orders-table/orders-table.component';\n import { MiniCardComponent } from '../mini-card/mini-card.component';\n import { TotalSaleComponent } from '../mini-card/total-sale/total-sale.component';\n import { AverageValueComponent } from '../mini-card/average-value/average-value.component';\n import { TotalOrderComponent } from '../mini-card/total-order/total-order.component';\n import { ReturningCuctomerComponent } from '../mini-card/returning-cuctomer/returning-cuctomer.component';\n+import { OrdersTableComponent } from '../orders-table/orders-table.component';\n \n @Component({\n   selector: 'app-dashboard',\n   templateUrl: './dashboard.component.html',\n"
                },
                {
                    "date": 1703746235825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n import { TotalSaleComponent } from '../mini-card/total-sale/total-sale.component';\n import { AverageValueComponent } from '../mini-card/average-value/average-value.component';\n import { TotalOrderComponent } from '../mini-card/total-order/total-order.component';\n import { ReturningCuctomerComponent } from '../mini-card/returning-cuctomer/returning-cuctomer.component';\n-import { OrdersTableComponent } from '../orders-table/orders-table.component';\n+import { OrdersTableComponent } from '../order/order-table/orders-table/orders-table.component';\n \n @Component({\n   selector: 'app-dashboard',\n   templateUrl: './dashboard.component.html',\n"
                }
            ],
            "date": 1703577070235,
            "name": "Commit-0",
            "content": "import { Component, inject } from '@angular/core';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { map } from 'rxjs/operators';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  standalone: true,\n  imports: [\n    MatGridListModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    CommonModule,\n    FormsModule\n  ]\n})\nexport class DashboardComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 }\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 }\n      ];\n    })\n  );\n}\n"
        }
    ]
}