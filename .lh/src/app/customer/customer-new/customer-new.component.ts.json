{
    "sourceFile": "src/app/customer/customer-new/customer-new.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1703746441130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1703757493441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,13 @@\n import { Component, inject } from '@angular/core';\n \n-import { ReactiveFormsModule, FormBuilder, Validators } from '@angular/forms';\n+import { ReactiveFormsModule, FormBuilder, Validators, FormsModule } from '@angular/forms';\n import { MatInputModule } from '@angular/material/input';\n import { MatButtonModule } from '@angular/material/button';\n import { MatSelectModule } from '@angular/material/select';\n import { MatRadioModule } from '@angular/material/radio';\n import { MatCardModule } from '@angular/material/card';\n+import { CommonModule } from '@angular/common';\n \n \n @Component({\n   selector: 'app-customer-new',\n@@ -18,9 +19,11 @@\n     MatButtonModule,\n     MatSelectModule,\n     MatRadioModule,\n     MatCardModule,\n-    ReactiveFormsModule\n+    ReactiveFormsModule,\n+    FormsModule,\n+    CommonModule,\n   ]\n })\n export class CustomerNewComponent {\n   private fb = inject(FormBuilder);\n"
                },
                {
                    "date": 1703758165201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n export class CustomerNewComponent {\n   private fb = inject(FormBuilder);\n   addressForm = this.fb.group({\n     company: null,\n-    firstName: [null, Validators.required],\n+    firstName: ['', Validators.required],\n     lastName: [null, Validators.required],\n     email: [null, Validators.compose([Validators.required, Validators.email])],\n     phone: [null, Validators.required],\n     address: [null, Validators.required],\n"
                },
                {
                    "date": 1703758268448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n-import { Component, inject } from '@angular/core';\n+import { Component, OnInit, inject } from '@angular/core';\n \n-import { ReactiveFormsModule, FormBuilder, Validators, FormsModule } from '@angular/forms';\n+import { ReactiveFormsModule, FormBuilder, Validators, FormsModule, FormGroup } from '@angular/forms';\n import { MatInputModule } from '@angular/material/input';\n import { MatButtonModule } from '@angular/material/button';\n import { MatSelectModule } from '@angular/material/select';\n import { MatRadioModule } from '@angular/material/radio';\n@@ -24,28 +24,31 @@\n     FormsModule,\n     CommonModule,\n   ]\n })\n-export class CustomerNewComponent {\n+export class CustomerNewComponent implements OnInit {\n   private fb = inject(FormBuilder);\n-  addressForm = this.fb.group({\n-    company: null,\n-    firstName: ['', Validators.required],\n-    lastName: [null, Validators.required],\n-    email: [null, Validators.compose([Validators.required, Validators.email])],\n-    phone: [null, Validators.required],\n-    address: [null, Validators.required],\n-    address2: null,\n-    city: [null, Validators.required],\n-    state: [null, Validators.required],\n-    postalCode: [null, Validators.compose([\n-      Validators.required, Validators.minLength(5), Validators.maxLength(5)])\n-    ],\n-    shipping: ['free', Validators.required]\n-  });\n+  addressForm: FormGroup | any;\n \n   hasUnitNumber = false;\n \n+  ngOnInit(): void {\n+    this.addressForm = this.fb.group({\n+      company: null,\n+      firstName: [null, Validators.required],\n+      lastName: [null, Validators.required],\n+      email: [null, Validators.compose([Validators.required, Validators.email])],\n+      phone: [null, Validators.required],\n+      address: [null, Validators.required],\n+      address2: null,\n+      city: [null, Validators.required],\n+      state: [null, Validators.required],\n+      postalCode: [null, Validators.compose([\n+        Validators.required, Validators.minLength(5), Validators.maxLength(5)])\n+      ],\n+      shipping: ['free', Validators.required]\n+    });\n+  }\n   states = [\n     {name: 'Alabama', abbreviation: 'AL'},\n     {name: 'Alaska', abbreviation: 'AK'},\n     {name: 'American Samoa', abbreviation: 'AS'},\n@@ -109,5 +112,7 @@\n \n   onSubmit(): void {\n     alert('Thanks!');\n   }\n+\n+\n }\n"
                },
                {
                    "date": 1703758763119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n       state: [null, Validators.required],\n       postalCode: [null, Validators.compose([\n         Validators.required, Validators.minLength(5), Validators.maxLength(5)])\n       ],\n-      shipping: ['free', Validators.required]\n+      // shipping: ['free', Validators.required]\n     });\n   }\n   states = [\n     {name: 'Alabama', abbreviation: 'AL'},\n"
                },
                {
                    "date": 1703760291400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,8 +110,9 @@\n     {name: 'Wyoming', abbreviation: 'WY'}\n   ];\n \n   onSubmit(): void {\n+    console.log(this.addressForm.value);\n     alert('Thanks!');\n   }\n \n \n"
                },
                {
                    "date": 1704176288777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n import { MatSelectModule } from '@angular/material/select';\n import { MatRadioModule } from '@angular/material/radio';\n import { MatCardModule } from '@angular/material/card';\n import { CommonModule } from '@angular/common';\n+import { MatIconModule } from '@angular/material/icon';\n \n \n @Component({\n   selector: 'app-customer-new',\n@@ -22,8 +23,9 @@\n     MatCardModule,\n     ReactiveFormsModule,\n     FormsModule,\n     CommonModule,\n+    MatIconModule\n   ]\n })\n export class CustomerNewComponent implements OnInit {\n   private fb = inject(FormBuilder);\n"
                },
                {
                    "date": 1704176758161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n import { MatRadioModule } from '@angular/material/radio';\n import { MatCardModule } from '@angular/material/card';\n import { CommonModule } from '@angular/common';\n import { MatIconModule } from '@angular/material/icon';\n+import { RouterLink } from '@angular/router';\n \n \n @Component({\n   selector: 'app-customer-new',\n@@ -23,9 +24,10 @@\n     MatCardModule,\n     ReactiveFormsModule,\n     FormsModule,\n     CommonModule,\n-    MatIconModule\n+    MatIconModule,\n+    RouterLink\n   ]\n })\n export class CustomerNewComponent implements OnInit {\n   private fb = inject(FormBuilder);\n"
                },
                {
                    "date": 1704254242084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,125 @@\n+import { Component, OnInit, inject } from '@angular/core';\n+\n+import { ReactiveFormsModule, FormBuilder, Validators, FormsModule, FormGroup } from '@angular/forms';\n+import { MatInputModule } from '@angular/material/input';\n+import { MatButtonModule } from '@angular/material/button';\n+import { MatSelectModule } from '@angular/material/select';\n+import { MatRadioModule } from '@angular/material/radio';\n+import { MatCardModule } from '@angular/material/card';\n+import { CommonModule } from '@angular/common';\n+import { MatIconModule } from '@angular/material/icon';\n+import { RouterLink, RouterModule } from '@angular/router';\n+\n+\n+@Component({\n+  selector: 'app-customer-new',\n+  templateUrl: './customer-new.component.html',\n+  styleUrls: ['./customer-new.component.css'],\n+  standalone: true,\n+  imports: [\n+    MatInputModule,\n+    MatButtonModule,\n+    MatSelectModule,\n+    MatRadioModule,\n+    MatCardModule,\n+    ReactiveFormsModule,\n+    FormsModule,\n+    CommonModule,\n+    MatIconModule,\n+    RouterLink,\n+    MatIconModule,\n+    RouterModule\n+  ]\n+})\n+export class CustomerNewComponent implements OnInit {\n+  private fb = inject(FormBuilder);\n+  addressForm: FormGroup | any;\n+\n+  hasUnitNumber = false;\n+\n+  ngOnInit(): void {\n+    this.addressForm = this.fb.group({\n+      company: null,\n+      firstName: [null, Validators.required],\n+      lastName: [null, Validators.required],\n+      email: [null, Validators.compose([Validators.required, Validators.email])],\n+      phone: [null, Validators.required],\n+      address: [null, Validators.required],\n+      address2: null,\n+      city: [null, Validators.required],\n+      state: [null, Validators.required],\n+      postalCode: [null, Validators.compose([\n+        Validators.required, Validators.minLength(5), Validators.maxLength(5)])\n+      ],\n+      // shipping: ['free', Validators.required]\n+    });\n+  }\n+  states = [\n+    {name: 'Alabama', abbreviation: 'AL'},\n+    {name: 'Alaska', abbreviation: 'AK'},\n+    {name: 'American Samoa', abbreviation: 'AS'},\n+    {name: 'Arizona', abbreviation: 'AZ'},\n+    {name: 'Arkansas', abbreviation: 'AR'},\n+    {name: 'California', abbreviation: 'CA'},\n+    {name: 'Colorado', abbreviation: 'CO'},\n+    {name: 'Connecticut', abbreviation: 'CT'},\n+    {name: 'Delaware', abbreviation: 'DE'},\n+    {name: 'District Of Columbia', abbreviation: 'DC'},\n+    {name: 'Federated States Of Micronesia', abbreviation: 'FM'},\n+    {name: 'Florida', abbreviation: 'FL'},\n+    {name: 'Georgia', abbreviation: 'GA'},\n+    {name: 'Guam', abbreviation: 'GU'},\n+    {name: 'Hawaii', abbreviation: 'HI'},\n+    {name: 'Idaho', abbreviation: 'ID'},\n+    {name: 'Illinois', abbreviation: 'IL'},\n+    {name: 'Indiana', abbreviation: 'IN'},\n+    {name: 'Iowa', abbreviation: 'IA'},\n+    {name: 'Kansas', abbreviation: 'KS'},\n+    {name: 'Kentucky', abbreviation: 'KY'},\n+    {name: 'Louisiana', abbreviation: 'LA'},\n+    {name: 'Maine', abbreviation: 'ME'},\n+    {name: 'Marshall Islands', abbreviation: 'MH'},\n+    {name: 'Maryland', abbreviation: 'MD'},\n+    {name: 'Massachusetts', abbreviation: 'MA'},\n+    {name: 'Michigan', abbreviation: 'MI'},\n+    {name: 'Minnesota', abbreviation: 'MN'},\n+    {name: 'Mississippi', abbreviation: 'MS'},\n+    {name: 'Missouri', abbreviation: 'MO'},\n+    {name: 'Montana', abbreviation: 'MT'},\n+    {name: 'Nebraska', abbreviation: 'NE'},\n+    {name: 'Nevada', abbreviation: 'NV'},\n+    {name: 'New Hampshire', abbreviation: 'NH'},\n+    {name: 'New Jersey', abbreviation: 'NJ'},\n+    {name: 'New Mexico', abbreviation: 'NM'},\n+    {name: 'New York', abbreviation: 'NY'},\n+    {name: 'North Carolina', abbreviation: 'NC'},\n+    {name: 'North Dakota', abbreviation: 'ND'},\n+    {name: 'Northern Mariana Islands', abbreviation: 'MP'},\n+    {name: 'Ohio', abbreviation: 'OH'},\n+    {name: 'Oklahoma', abbreviation: 'OK'},\n+    {name: 'Oregon', abbreviation: 'OR'},\n+    {name: 'Palau', abbreviation: 'PW'},\n+    {name: 'Pennsylvania', abbreviation: 'PA'},\n+    {name: 'Puerto Rico', abbreviation: 'PR'},\n+    {name: 'Rhode Island', abbreviation: 'RI'},\n+    {name: 'South Carolina', abbreviation: 'SC'},\n+    {name: 'South Dakota', abbreviation: 'SD'},\n+    {name: 'Tennessee', abbreviation: 'TN'},\n+    {name: 'Texas', abbreviation: 'TX'},\n+    {name: 'Utah', abbreviation: 'UT'},\n+    {name: 'Vermont', abbreviation: 'VT'},\n+    {name: 'Virgin Islands', abbreviation: 'VI'},\n+    {name: 'Virginia', abbreviation: 'VA'},\n+    {name: 'Washington', abbreviation: 'WA'},\n+    {name: 'West Virginia', abbreviation: 'WV'},\n+    {name: 'Wisconsin', abbreviation: 'WI'},\n+    {name: 'Wyoming', abbreviation: 'WY'}\n+  ];\n+\n+  onSubmit(): void {\n+    console.log(this.addressForm.value);\n+    alert('Thanks!');\n+  }\n+\n+\n+}\n"
                }
            ],
            "date": 1703746441130,
            "name": "Commit-0",
            "content": "import { Component, inject } from '@angular/core';\n\nimport { ReactiveFormsModule, FormBuilder, Validators } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatCardModule } from '@angular/material/card';\n\n\n@Component({\n  selector: 'app-customer-new',\n  templateUrl: './customer-new.component.html',\n  styleUrls: ['./customer-new.component.css'],\n  standalone: true,\n  imports: [\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatCardModule,\n    ReactiveFormsModule\n  ]\n})\nexport class CustomerNewComponent {\n  private fb = inject(FormBuilder);\n  addressForm = this.fb.group({\n    company: null,\n    firstName: [null, Validators.required],\n    lastName: [null, Validators.required],\n    email: [null, Validators.compose([Validators.required, Validators.email])],\n    phone: [null, Validators.required],\n    address: [null, Validators.required],\n    address2: null,\n    city: [null, Validators.required],\n    state: [null, Validators.required],\n    postalCode: [null, Validators.compose([\n      Validators.required, Validators.minLength(5), Validators.maxLength(5)])\n    ],\n    shipping: ['free', Validators.required]\n  });\n\n  hasUnitNumber = false;\n\n  states = [\n    {name: 'Alabama', abbreviation: 'AL'},\n    {name: 'Alaska', abbreviation: 'AK'},\n    {name: 'American Samoa', abbreviation: 'AS'},\n    {name: 'Arizona', abbreviation: 'AZ'},\n    {name: 'Arkansas', abbreviation: 'AR'},\n    {name: 'California', abbreviation: 'CA'},\n    {name: 'Colorado', abbreviation: 'CO'},\n    {name: 'Connecticut', abbreviation: 'CT'},\n    {name: 'Delaware', abbreviation: 'DE'},\n    {name: 'District Of Columbia', abbreviation: 'DC'},\n    {name: 'Federated States Of Micronesia', abbreviation: 'FM'},\n    {name: 'Florida', abbreviation: 'FL'},\n    {name: 'Georgia', abbreviation: 'GA'},\n    {name: 'Guam', abbreviation: 'GU'},\n    {name: 'Hawaii', abbreviation: 'HI'},\n    {name: 'Idaho', abbreviation: 'ID'},\n    {name: 'Illinois', abbreviation: 'IL'},\n    {name: 'Indiana', abbreviation: 'IN'},\n    {name: 'Iowa', abbreviation: 'IA'},\n    {name: 'Kansas', abbreviation: 'KS'},\n    {name: 'Kentucky', abbreviation: 'KY'},\n    {name: 'Louisiana', abbreviation: 'LA'},\n    {name: 'Maine', abbreviation: 'ME'},\n    {name: 'Marshall Islands', abbreviation: 'MH'},\n    {name: 'Maryland', abbreviation: 'MD'},\n    {name: 'Massachusetts', abbreviation: 'MA'},\n    {name: 'Michigan', abbreviation: 'MI'},\n    {name: 'Minnesota', abbreviation: 'MN'},\n    {name: 'Mississippi', abbreviation: 'MS'},\n    {name: 'Missouri', abbreviation: 'MO'},\n    {name: 'Montana', abbreviation: 'MT'},\n    {name: 'Nebraska', abbreviation: 'NE'},\n    {name: 'Nevada', abbreviation: 'NV'},\n    {name: 'New Hampshire', abbreviation: 'NH'},\n    {name: 'New Jersey', abbreviation: 'NJ'},\n    {name: 'New Mexico', abbreviation: 'NM'},\n    {name: 'New York', abbreviation: 'NY'},\n    {name: 'North Carolina', abbreviation: 'NC'},\n    {name: 'North Dakota', abbreviation: 'ND'},\n    {name: 'Northern Mariana Islands', abbreviation: 'MP'},\n    {name: 'Ohio', abbreviation: 'OH'},\n    {name: 'Oklahoma', abbreviation: 'OK'},\n    {name: 'Oregon', abbreviation: 'OR'},\n    {name: 'Palau', abbreviation: 'PW'},\n    {name: 'Pennsylvania', abbreviation: 'PA'},\n    {name: 'Puerto Rico', abbreviation: 'PR'},\n    {name: 'Rhode Island', abbreviation: 'RI'},\n    {name: 'South Carolina', abbreviation: 'SC'},\n    {name: 'South Dakota', abbreviation: 'SD'},\n    {name: 'Tennessee', abbreviation: 'TN'},\n    {name: 'Texas', abbreviation: 'TX'},\n    {name: 'Utah', abbreviation: 'UT'},\n    {name: 'Vermont', abbreviation: 'VT'},\n    {name: 'Virgin Islands', abbreviation: 'VI'},\n    {name: 'Virginia', abbreviation: 'VA'},\n    {name: 'Washington', abbreviation: 'WA'},\n    {name: 'West Virginia', abbreviation: 'WV'},\n    {name: 'Wisconsin', abbreviation: 'WI'},\n    {name: 'Wyoming', abbreviation: 'WY'}\n  ];\n\n  onSubmit(): void {\n    alert('Thanks!');\n  }\n}\n"
        }
    ]
}